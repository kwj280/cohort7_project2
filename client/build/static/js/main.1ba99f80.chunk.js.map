{"version":3,"sources":["components/AutoCompleteInput.js","components/ProfileForm.js","components/WorkExperienceForm.js","components/SkillsForm.js","components/InterestsForm.js","components/LinksForm.js","components/Header.js","components/Footer.js","components/SideNavBar.js","components/SignUp.js","components/SignIn.js","pages/LandingPage.js","components/JobsCard.js","pages/JobsPage.js","pages/ProfilePage.js","pages/MyApplicationsPage.js","pages/SettingPage.js","components/JobForm.js","pages/PostJobPage.js","components/OldJobForm.js","pages/ApplicationsPage.js","components/LogOut.js","pages/MainContentBody.js","pages/MainLayout.js","App.js","index.js"],"names":["filter","createFilterOptions","FreeSoloCreateOption","selectLabel","value","setValue","buttonRef","optionList","fullWidth","onChange","event","newValue","onInputChange","target","filterOptions","options","params","filtered","inputValue","selectOnFocus","clearOnBlur","handleHomeEndKeys","id","getOptionLabel","option","renderOption","props","freeSolo","renderInput","label","onKeyDown","e","code","current","click","styled","MuiTextField","width","margin","theme","spacing","float","ProfileForm","user","useState","profile","setProfile","image","_setImage","profileImg","useRef","useEffect","axios","get","_id","then","res","data","profile_picture","img","imgSrc","Buffer","from","toString","setImage","newImage","URL","revokeObjectURL","sx","maxWidth","container","justifyContent","alignItems","rowSpacing","columnSpacing","item","xs","onClick","type","ref","files","reader","FileReader","onloadend","console","log","result","put","readAsDataURL","createObjectURL","style","display","height","alt","src","variant","email","marginBottom","firstName","lastName","TextField","WorkExperienceForm","Date","dateFrom","setDateFrom","dateTo","setDateTo","present","setPresent","title","setTitle","company","setCompany","description","setDescription","addButtonVisible","setAddButtonVisible","showWorkExperienceForm","setShowWorkExperienceForm","workExperiences","setWorkExperiences","deleteButtonVisible","setDeleteButtonVisible","toggleWorkExperinceChanged","setToggleWorkExperinceChanged","months","sort","a","b","dateA","dateB","getFullYear","getMonth","handleInputChange","setter","elevation","paddingX","onMouseEnter","onMouseLeave","paddingY","prev","in","dateAdapter","DateAdapter","views","textAlign","control","checked","multiline","rows","maxrows","workExperience","post","handleSave","color","map","work","index","component","delete","gutterBottom","mb","skillOptions","ListItem","SkillsForm","editButtonVisible","setEditButtonVisible","editSkills","setEditSkills","skill","setSkill","skills","setSkills","addSkillBtnRef","listStyle","length","values","includes","concat","onDelete","chipToDelete","chips","chip","interestOptions","InterestsForm","editInterests","setEditInterests","interest","setInterest","interests","setInterests","addInterestBtnRef","LinksForm","editLinks","setEditLinks","linkGit","setLinkGit","linkLinkedIn","setLinkLinkedIn","paddingBottom","fontSize","href","underline","AppBar","MuiAppBar","shouldForwardProp","prop","open","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","Header","setOpen","position","Toolbar","IconButton","edge","marginRight","Typography","noWrap","className","Footer","top","bottom","List","ListItemText","inset","to","openedMixin","overflowX","closedMixin","breakpoints","up","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","SideNavBar","DrawerHeader","navigate","useNavigate","useTheme","userMenuItems","text","icon","link","recruiterMenuItems","handleNav","direction","Divider","button","ListItemIcon","primary","Copyright","align","createTheme","SignUp","inputs","setInputs","handleChange","name","ThemeProvider","Container","CssBaseline","Box","marginTop","flexDirection","Avatar","m","bgColor","noValidate","onSubmit","preventDefault","response","status","mt","Grid","sm","autoComplete","required","autoFocus","password","FormControlLabel","Checkbox","Button","SignIn","setUser","LandingPage","searchQuery","setSearchQuery","InputProps","endAdornment","InputAdornment","ml","ExpandMore","expand","other","transform","shortest","JobCard","query","expanded","setExpanded","jobs","setJobs","handleExpandClick","fetch","fetchResult","json","JobList","fetchData","job","Card","CardHeader","avatar","bgcolor","red","action","Title","subheader","Company","CardContent","Description","timestamps","Timestamps","Skills","CardActions","disableSpacing","Collapse","timeout","unmountOnExit","Paper","typography","body2","padding","palette","secondary","JobsPage","inputQuery","useParams","q","setQuery","flexGrow","minHeight","inputRef","paddingTop","paddingLeft","useStyles","makeStyles","content","ProfilePage","classes","MyApplicationPage","SettingPage","setFirstName","setLastName","setPassword","setEmail","editInfo","setEditInfo","updateUser","newUser","size","validationSchema","Yup","shape","min","availability","expiryDate","url","root","JobForm","formik","useFormik","initialValues","method","resetForm","handleSubmit","onBlur","handleBlur","error","touched","Boolean","errors","helperText","LocalizationProvider","AdapterDateFns","DatePicker","setFieldValue","inputVariant","setFieldTouched","disabled","isValid","Availability","ExpiryDate","Link","PostJobPage","ApplicationsPage","LogOut","MainContentBody","path","element","mixins","toolbar","MainLayout","React","p","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ba99f80.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\r\n\r\nconst filter = createFilterOptions();\r\n\r\nexport default function FreeSoloCreateOption({selectLabel, value, setValue, buttonRef, optionList}) {\r\n\r\n  return (\r\n    <Autocomplete\r\n      value={value}\r\n      fullWidth\r\n      onChange={(event, newValue) => {\r\n        setValue(newValue);\r\n      }}\r\n      onInputChange={(event)=>{\r\n        if(event)\r\n          setValue(event.target.value)\r\n      }}\r\n      filterOptions={(options, params) => {\r\n        const filtered = filter(options, params);\r\n\r\n        const { inputValue } = params;\r\n        // Suggest the creation of a new value\r\n        return filtered;\r\n      }}\r\n      selectOnFocus\r\n      clearOnBlur\r\n      handleHomeEndKeys\r\n      id={`autoComplete-${selectLabel}`}\r\n      options={optionList}\r\n      getOptionLabel={(option) => {\r\n        // Value selected with enter, right from the input\r\n        return option;\r\n      }}\r\n      renderOption={(props, option) => <li {...props}>{option}</li>}\r\n      freeSolo\r\n      renderInput={(params) => (\r\n        <TextField {...params} label={selectLabel} \r\n          onKeyDown = {(e)=>{\r\n            if (e.code === 'Enter' && e.target.value)\r\n              buttonRef.current.click()\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import MuiTextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport axios from \"axios\";\r\nimport { styled } from \"@mui/system\";\r\nimport { useState } from \"react\";\r\nimport { Grid, IconButton, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { useRef, useEffect } from \"react\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport WorkExperienceForm from \"./WorkExperienceForm\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport SkillsForm from \"./SkillsForm\";\r\nimport InterestsForm from \"./InterestsForm\";\r\nimport LinksForm from \"./LinksForm\";\r\n\r\n//import {useForm, Controller} from \"react-hook-form\"\r\n\r\nconst TextField = styled(MuiTextField)({\r\n  width: \"100%\",\r\n});\r\nconst ListItem = styled(\"li\")(({ theme }) => ({\r\n  margin: theme.spacing(0.5),\r\n  float: \"left\",\r\n}));\r\n\r\nconst ProfileForm = ({ user }) => {\r\n  const [profile, setProfile] = useState(null);\r\n  const [image, _setImage] = useState(null);\r\n  const profileImg = useRef(null);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/profile/getByUserId/\" + user._id).then((res) => {\r\n      setProfile(res.data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (profile?.profile_picture) {\r\n      let img = profile.profile_picture;\r\n      const buf = Buffer.from(img.data);\r\n      let imgSrc = buf.toString(\"utf8\");\r\n      setImage(imgSrc);\r\n    }\r\n    // _setImage(profile.profile_picture)\r\n  }, [profile]);\r\n  const cleanup = () => {\r\n    URL.revokeObjectURL(image);\r\n    profileImg.current.value = null;\r\n  };\r\n\r\n  const setImage = (newImage) => {\r\n    if (image) {\r\n      cleanup();\r\n    }\r\n    _setImage(newImage);\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    const newImage = event.target?.files?.[0];\r\n    if (newImage) {\r\n      var reader = new FileReader();\r\n      reader.onloadend = function () {\r\n        console.log(reader.result);\r\n        axios\r\n          .put(\"/profile/updateProfilePicture\", {\r\n            _id: profile._id,\r\n            profile_picture: reader.result,\r\n          })\r\n          .then((res) => {\r\n            console.log(res);\r\n          });\r\n      };\r\n      reader.readAsDataURL(newImage);\r\n\r\n      // newImage.text().then(img => {\r\n      //   console.log(img)\r\n\r\n      // })\r\n      setImage(URL.createObjectURL(newImage));\r\n    }\r\n  };\r\n  const onProfilePictureClick = () => {\r\n    profileImg.current.click();\r\n  };\r\n\r\n  //add value to list\r\n  const clickAddButton = (value, setValue, setValues) => {\r\n    setValues((values) => {\r\n      if (values && value && !values.includes(value))\r\n        return values.concat(value);\r\n      return values;\r\n    });\r\n    setValue(\"\");\r\n  };\r\n\r\n  const handleDelete = (chipToDelete, setter) => () => {\r\n    setter((chips) => chips.filter((chip) => chip !== chipToDelete));\r\n  };\r\n  return (\r\n    <>\r\n      <Box sx={{ maxWidth: \"55%\" }}>\r\n        <Grid\r\n          container\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          rowSpacing={2}\r\n          columnSpacing={2}\r\n        >\r\n          <Grid item xs={12} container justifyContent=\"center\">\r\n            <IconButton onClick={onProfilePictureClick}>\r\n              <input\r\n                type=\"file\"\r\n                id=\"file\"\r\n                ref={profileImg}\r\n                onChange={handleOnChange}\r\n                style={{ display: \"none\" }}\r\n              />\r\n              <Avatar\r\n                sx={{ width: 150, height: 150 }}\r\n                alt=\"Name\"\r\n                src={image || \"/broken-image.jpg\"}\r\n              >\r\n                User\r\n              </Avatar>\r\n            </IconButton>\r\n          </Grid>\r\n          <Grid item xs={12} container justifyContent=\"center\">\r\n            <Typography variant=\"h6\"> {user?.email} </Typography>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            container\r\n            justifyContent=\"center\"\r\n            sx={{ marginBottom: \"2em\" }}\r\n          >\r\n            <Typography variant=\"h6\">\r\n              {\" \"}\r\n              {user?.firstName} {user?.lastName}{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          {/************************************SKILLS************************************/}\r\n          <Grid item xs={12}>\r\n            <SkillsForm profile={profile} setProfile={setProfile} />\r\n          </Grid>\r\n          {/**********************************Interests***********************************/}\r\n          <Grid item xs={12}>\r\n            <InterestsForm profile={profile} setProfile={setProfile} />\r\n          </Grid>\r\n\r\n          {/**********************************Projects***********************************/}\r\n\r\n          <Grid item xs={12}>\r\n            <WorkExperienceForm profile={profile} setProfile={setProfile} />\r\n          </Grid>\r\n\r\n          {/**********************************Links***********************************/}\r\n\r\n          <Grid item xs={12}>\r\n            <LinksForm profile={profile} setProfile={setProfile} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileForm;\r\n","import MuiTextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Paper from '@mui/material/Paper';\r\nimport axios from 'axios'\r\nimport { styled } from '@mui/system';\r\nimport { useEffect, useState } from 'react'\r\nimport { Grid, IconButton, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport { useRef } from 'react';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DateAdapter from '@mui/lab/AdapterMoment';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Divider from '@mui/material/Divider';\r\n\r\n//import {useForm, Controller} from \"react-hook-form\"\r\n\r\nconst TextField = styled(MuiTextField)({\r\n  width: '100%'\r\n});\r\n\r\nconst WorkExperienceForm = ({ profile, setProfile }) => {\r\n\r\n  const [dateFrom, setDateFrom] = useState(new Date())\r\n  const [dateTo, setDateTo] = useState(new Date())\r\n  const [present, setPresent] = useState(false)\r\n  const [title, setTitle] = useState('')\r\n  const [company, setCompany] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const [addButtonVisible, setAddButtonVisible] = useState(false)\r\n  const [showWorkExperienceForm, setShowWorkExperienceForm] = useState(false);\r\n  const [workExperiences, setWorkExperiences] = useState([])\r\n  const [deleteButtonVisible, setDeleteButtonVisible] = useState(-1)\r\n  const [toggleWorkExperinceChanged,setToggleWorkExperinceChanged ] = useState(false)\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n  useEffect(() => {\r\n    if (profile) {\r\n      axios.get('/profile/workExperience/' + profile._id).then(res => {\r\n        if (res.data){\r\n          let workExperiences = res.data\r\n          workExperiences.sort((a, b)=> {\r\n            let dateA = new Date(a.dateFrom)\r\n            let dateB = new Date(b.dateFrom)\r\n            return dateA.getFullYear() === dateB.getFullYear()? dateB.getMonth() - dateA.getMonth() :  dateB.getFullYear() - dateA.getFullYear() \r\n          })\r\n          setWorkExperiences(workExperiences)\r\n\r\n        }\r\n      })\r\n    }\r\n  }, [profile, toggleWorkExperinceChanged])\r\n\r\n  const handleInputChange = (value, setter) => {\r\n    setter(value)\r\n  }\r\n  const handleSave = () => {\r\n    let workExperience = {\r\n      dateFrom,\r\n      dateTo,\r\n      present,\r\n      title,\r\n      company,\r\n      description\r\n    }\r\n    axios.post('/profile/workExperience', { profile, workExperience }).then(res => {\r\n      setDateFrom(new Date())\r\n      setDateTo(new Date())\r\n      setTitle('')\r\n      setCompany('')\r\n      setDescription('')\r\n      setToggleWorkExperinceChanged((prev)=>!prev)\r\n    })\r\n  }\r\n\r\n  const deleteWorkExperience = (id)=>{\r\n    axios.delete('/profile/workExperience/'+id).then(res=>{\r\n      setToggleWorkExperinceChanged((prev)=>!prev)\r\n\r\n    })\r\n  }\r\n  return (\r\n    <>\r\n      <Paper elevation={3} sx={{ paddingX: \"1.5rem\", marginBottom: \"1.5rem\" }}\r\n        onMouseEnter={() => { setAddButtonVisible(true) }}\r\n        onMouseLeave={() => { setAddButtonVisible(false) }}\r\n      >\r\n        <Grid\r\n          container\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          rowSpacing={2}\r\n          columnSpacing={2}\r\n        >\r\n          <Grid item xs={10}>\r\n            <Typography variant=\"h6\">Project/Work Experience</Typography>\r\n          </Grid>\r\n          <Grid item xs={2} container justifyContent=\"right\">\r\n            <Button sx={{ paddingY: '0px' }} onClick={() => setShowWorkExperienceForm((prev) => !prev)}>\r\n              {!showWorkExperienceForm ? addButtonVisible && <AddIcon /> : addButtonVisible && <CloseIcon />}\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Collapse in={showWorkExperienceForm}>\r\n\r\n              <LocalizationProvider dateAdapter={DateAdapter}>\r\n                <Grid\r\n                  container\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  rowSpacing={2}\r\n                  columnSpacing={2}\r\n                >\r\n                  <Grid item xs={5}>\r\n\r\n                    <DesktopDatePicker\r\n                      label=\"From\"\r\n                      value={dateFrom}\r\n                      views={['year', 'month']}\r\n                      onChange={(newValue) => handleInputChange(newValue, setDateFrom)}\r\n                      renderInput={(params) => <TextField {...params} />}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={5}>\r\n\r\n                    {!present ?\r\n                      <DesktopDatePicker\r\n                        label=\"To\"\r\n                        value={dateTo}\r\n                        views={['year', 'month']}\r\n                        onChange={(newValue) => handleInputChange(newValue, setDateTo)}\r\n                        renderInput={(params) => <TextField {...params}/>}\r\n                      />\r\n                      :\r\n                      <Typography sx={{ textAlign: 'center' }}>Present</Typography>}\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <FormControlLabel control={<Checkbox checked={present} onChange={(e) => setPresent(e.target.checked)} />} label=\"Present\" />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      label=\"Title\"\r\n                      variant=\"outlined\"\r\n                      value={title}\r\n                      onChange={(e) => handleInputChange(e.target.value, setTitle)}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      label=\"Company\"\r\n                      variant=\"outlined\"\r\n                      value={company}\r\n                      onChange={(e) => handleInputChange(e.target.value, setCompany)}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      label=\"Description\"\r\n                      variant=\"outlined\"\r\n                      value={description}\r\n                      multiline\r\n                      rows={5}\r\n                      maxrows={10}\r\n                      onChange={(e) => handleInputChange(e.target.value, setDescription)}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sx={{ marginBottom: \"1rem\" }} container justifyContent=\"right\">\r\n                    <Button variant=\"text\" onClick={() => handleSave()}>Save</Button>\r\n                    <Button variant=\"text\" color=\"warning\" onClick={() => { setShowWorkExperienceForm(false) }}>Cancel</Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </LocalizationProvider>\r\n            </Collapse>\r\n          </Grid>\r\n          <Grid container xs={12} item>\r\n            {workExperiences?.map((work, index) => {\r\n              let dateFrom = new Date(work.dateFrom)\r\n              let dateTo = new Date(work.dateTo)\r\n\r\n              return (\r\n                <Grid item xs={12} key={work._id}\r\n                  onMouseEnter={() => { setDeleteButtonVisible(index) }}\r\n                  onMouseLeave={() => { setDeleteButtonVisible(-1) }}\r\n                >\r\n                  <Divider component=\"div\" sx={{marginBottom: '1em'}}/>\r\n                  <Typography variant='subtitle1' display=\"inline\" > <b>{work.title}</b></Typography>\r\n                  <Button sx={{ paddingY: '0px' }} sx={{float: 'right'}} onClick={()=>{deleteWorkExperience(work._id)}} >\r\n                    {deleteButtonVisible === index && <CloseIcon />}\r\n                  </Button>\r\n                  <br/>\r\n                  <Typography variant='body'>{work.company}</Typography>\r\n                  &nbsp;&nbsp;&nbsp;\r\n                  <Typography variant='overline' gutterBottom>{months[dateFrom.getMonth()] + ' ' + dateFrom.getFullYear()} - {work.present ? 'Present' : months[dateTo.getMonth()] + ' ' + dateTo.getFullYear()}</Typography>\r\n                  <Typography mb={2} variant='body' component=\"div\">{work.description}</Typography>\r\n\r\n\r\n                </Grid>\r\n              )\r\n            })\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n\r\n    </>\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default WorkExperienceForm","import MuiTextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport axios from 'axios'\r\nimport { styled } from '@mui/system';\r\nimport { useState } from 'react'\r\nimport { Grid, IconButton, Paper, Typography } from '@mui/material';\r\nimport { useRef, useEffect } from 'react';\r\nimport AutoCompleteInput from './AutoCompleteInput'\r\nimport Chip from '@mui/material/Chip';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nconst skillOptions = ['HTML', 'CSS', 'Javascript', 'Node', 'React', 'MongoDB'];\r\nconst TextField = styled(MuiTextField)({\r\n  width: '100%'\r\n});\r\nconst ListItem = styled('li')(({ theme }) => ({\r\n  margin: theme.spacing(0.5),\r\n  float: 'left',\r\n}));\r\n\r\n\r\nconst SkillsForm = ({ profile, setProfile }) => {\r\n\r\n  const [editButtonVisible, setEditButtonVisible] = useState(false)\r\n  const [editSkills, setEditSkills] = useState(false)\r\n  const [skill, setSkill] = useState('');\r\n  const [skills, setSkills] = useState(profile ? profile.skills : [])\r\n  const addSkillBtnRef = useRef()\r\n  \r\n  useEffect(() => {\r\n    if (profile)\r\n      setSkills(profile.skills)\r\n  }, [profile])\r\n\r\n  const clickAddButton = (value, setValue, setValues) => {\r\n    setValues(values => {\r\n      if (values && value && !values.includes(value))\r\n        return values.concat(value)\r\n      return values\r\n    })\r\n    setValue('')\r\n  }\r\n  const handleDelete = (chipToDelete, setter) => () => {\r\n    setter((chips) => chips.filter((chip) => chip !== chipToDelete));\r\n  };\r\n  const saveSkills = () => {\r\n    axios.put('/profile/update', { _id: profile._id, skills: skills }).then(res => {\r\n      setProfile(res.data)\r\n    })\r\n    setEditSkills(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper elevation={3} sx={{ paddingX: \"1.5rem\", marginBottom:\"1.5rem\"}}\r\n        onMouseEnter={() => { setEditButtonVisible(true) }}\r\n        onMouseLeave={() => { setEditButtonVisible(false) }}\r\n      >\r\n        <Grid\r\n          container\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          rowSpacing={2}\r\n          columnSpacing={2}\r\n        >\r\n          <Grid item xs={10}>\r\n            <Typography variant=\"h6\">Skills </Typography>\r\n          </Grid>\r\n\r\n          <Grid item container justifyContent=\"right\" xs={2}>\r\n            <Button sx={{ paddingY: '0px' }} onClick={() => setEditSkills((prev) => !prev)}>\r\n              {!editSkills ? editButtonVisible && <EditIcon /> : editButtonVisible && <CloseIcon />}\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sx={{ listStyle: 'none' }}>\r\n            {skills.length == 0 && !editSkills ? <Typography variant=\"body1\"> No Skills </Typography> : <></>}\r\n            {skills.length != 0 && !editSkills ?\r\n              skills.map(skill => {\r\n                return (\r\n                  <ListItem key={skill}>\r\n                    <Chip\r\n                      label={skill}\r\n                    />\r\n                  </ListItem>\r\n                )\r\n              })\r\n              : <></>}\r\n\r\n          </Grid>\r\n\r\n\r\n\r\n          <Grid item xs={12}>\r\n            <Collapse in={editSkills}>\r\n              <Grid\r\n                container\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                rowSpacing={2}\r\n                columnSpacing={2}\r\n              >\r\n                <Grid item xs={10}>\r\n                  <AutoCompleteInput\r\n                    selectLabel={\"Skills\"}\r\n                    optionList={skillOptions}\r\n                    value={skill}\r\n                    setValue={setSkill}\r\n                    buttonRef={addSkillBtnRef} />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                  <Button variant=\"text\" ref={addSkillBtnRef} onClick={() => clickAddButton(skill, setSkill, setSkills)}>ADD</Button>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} container sx={{ listStyle: 'none' }}>\r\n                  {skills.map(skill => {\r\n                    return (\r\n                      <ListItem key={skill}>\r\n                        <Chip\r\n                          label={skill}\r\n                          onDelete={handleDelete(skill, setSkills)}\r\n                        />\r\n                      </ListItem>\r\n                    )\r\n                  })}\r\n\r\n\r\n                </Grid>\r\n                <Grid item xs={12} container sx={{ marginBottom: \"1rem\" }} justifyContent=\"right\">\r\n                  <Button variant=\"text\" onClick={() => { saveSkills() }}>Save</Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Collapse>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default SkillsForm\r\n","import MuiTextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport axios from 'axios'\r\nimport { styled } from '@mui/system';\r\nimport { useState } from 'react'\r\nimport { Grid, IconButton, Typography } from '@mui/material';\r\nimport { useRef, useEffect } from 'react';\r\nimport AutoCompleteInput from './AutoCompleteInput'\r\nimport Chip from '@mui/material/Chip';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nconst interestOptions = ['Machine Learning', 'Big Data', 'System Design', 'Load Balancing', 'UI design']\r\n\r\nconst TextField = styled(MuiTextField)({\r\n  width: '100%'\r\n});\r\nconst ListItem = styled('li')(({ theme }) => ({\r\n  margin: theme.spacing(0.5),\r\n  float: 'left',\r\n}));\r\n\r\n\r\nconst InterestsForm = ({ profile, setProfile }) => {\r\n\r\n  const [editButtonVisible, setEditButtonVisible] = useState(false)\r\n  const [editInterests, setEditInterests] = useState(false)\r\n  const [interest, setInterest] = useState('');\r\n  const [interests, setInterests] = useState([])\r\n  const addInterestBtnRef = useRef()\r\n\r\n  useEffect(() => {\r\n    if (profile)\r\n      setInterests(profile.interest)\r\n  }, [profile])\r\n\r\n  const clickAddButton = (value, setValue, setValues) => {\r\n    setValues(values => {\r\n      if (values && value && !values.includes(value))\r\n        return values.concat(value)\r\n      return values\r\n    })\r\n    setValue('')\r\n  }\r\n\r\n  const handleDelete = (chipToDelete, setter) => () => {\r\n    setter((chips) => chips.filter((chip) => chip !== chipToDelete));\r\n  };\r\n\r\n  const saveInterests = () => {\r\n    axios.put('/profile/update', { _id: profile._id, interest: interests }).then(res => {\r\n      setProfile(res.data)\r\n    })\r\n    setEditInterests(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper elevation={3} sx={{ paddingX: \"1.5rem\", marginBottom: \"1.5rem\" }}\r\n        onMouseEnter={() => { setEditButtonVisible(true) }}\r\n        onMouseLeave={() => { setEditButtonVisible(false) }}\r\n      >\r\n\r\n        <Grid\r\n          container\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          rowSpacing={2}\r\n          columnSpacing={2}\r\n        >\r\n          <Grid item xs={10}>\r\n            <Typography variant=\"h6\">Interests </Typography>\r\n          </Grid>\r\n          <Grid item xs={2} container justifyContent=\"right\">\r\n            <Button sx={{ paddingY: '0px' }} onClick={() => setEditInterests((prev) => !prev)}>\r\n              {!editInterests ? editButtonVisible&&<EditIcon /> : editButtonVisible&&<CloseIcon />}\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sx={{ listStyle: 'none' }}>\r\n            {interests.length == 0 && !editInterests ? <Typography variant=\"body1\"> No Interests </Typography> : <></>}\r\n            {interests.length != 0 && !editInterests ?\r\n              interests.map(interest => {\r\n                return (\r\n                  <ListItem key={interest}>\r\n                    <Chip\r\n                      label={interest}\r\n                    />\r\n                  </ListItem>\r\n                )\r\n              })\r\n              : <></>}\r\n\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Collapse in={editInterests}>\r\n              <Grid\r\n                container\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                rowSpacing={2}\r\n                columnSpacing={2}\r\n              >\r\n                <Grid item xs={10}>\r\n                  <AutoCompleteInput selectLabel={\"Interests\"}\r\n                    optionList={interestOptions}\r\n                    value={interest}\r\n                    setValue={setInterest}\r\n                    buttonRef={addInterestBtnRef}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                  <Button variant=\"text\" ref={addInterestBtnRef} onClick={() => clickAddButton(interest, setInterest, setInterests)}>ADD</Button>\r\n                </Grid>\r\n                <Grid item xs={12} container sx={{ listStyle: 'none' }}>\r\n                  {interests.map(interest => {\r\n                    return (\r\n                      <ListItem key={interest}>\r\n                        <Chip\r\n                          label={interest}\r\n                          onDelete={handleDelete(interest, setInterests)}\r\n                        />\r\n                      </ListItem>\r\n                    )\r\n                  })}\r\n                </Grid>\r\n                <Grid item xs={12} container sx={{ marginBottom:\"1rem\" }} justifyContent=\"right\">\r\n                  <Button variant=\"text\" onClick={()=>saveInterests()}>Save</Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Collapse>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default InterestsForm\r\n","import MuiTextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Paper from '@mui/material/Paper';\r\nimport axios from 'axios'\r\nimport { styled } from '@mui/system';\r\nimport { useState } from 'react'\r\nimport { Grid, IconButton, Typography } from '@mui/material';\r\nimport { useRef, useEffect } from 'react';\r\nimport AutoCompleteInput from './AutoCompleteInput'\r\nimport Chip from '@mui/material/Chip';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport Link from '@mui/material/Link';\r\n\r\n\r\nconst TextField = styled(MuiTextField)({\r\n  width: '100%'\r\n});\r\n\r\n\r\n\r\nconst LinksForm = ({ profile, setProfile }) => {\r\n  const [editButtonVisible, setEditButtonVisible] = useState(false)\r\n  const [editLinks, setEditLinks] = useState(false)\r\n  const [linkGit, setLinkGit] = useState('')\r\n  const [linkLinkedIn, setLinkLinkedIn] = useState('')\r\n  const saveLinks = () => {\r\n    axios.put('/profile/update', { _id: profile._id, linkGit, linkLinkedIn }).then(res => {\r\n      setProfile(res.data)\r\n    })\r\n    setEditLinks(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (profile) {\r\n      setLinkLinkedIn(profile.linkLinkedIn?? '')\r\n      setLinkGit(profile.linkGit?? '')\r\n    }\r\n  }, [profile])\r\n\r\n\r\n  return (\r\n    <>\r\n      <Paper elevation={3} sx={{ paddingX: \"1.5rem\", marginBottom: \"1.5rem\" }}\r\n        onMouseEnter={() => { setEditButtonVisible(true) }}\r\n        onMouseLeave={() => { setEditButtonVisible(false) }}\r\n      >\r\n        <Grid\r\n          container\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          rowSpacing={2}\r\n          columnSpacing={2}\r\n        >\r\n          <Grid item xs={10} >\r\n            <Typography variant=\"h6\" sx={{ paddingBottom: \"0px\" }}>Link</Typography>\r\n          </Grid>\r\n          <Grid item xs={2} container justifyContent=\"right\">\r\n            <Button sx={{ paddingY: '0px' }} onClick={() => setEditLinks((prev) => !prev)}>\r\n              {!editLinks ? editButtonVisible && <EditIcon /> : editButtonVisible && <CloseIcon />}\r\n            </Button>\r\n          </Grid>\r\n          {!editLinks && linkLinkedIn &&\r\n            <>\r\n              <Grid item xs={1}>\r\n                <LinkedInIcon color=\"primary\" fontSize=\"large\" />\r\n              </Grid>\r\n              <Grid item xs={11} sx={{ paddingBottom: \"12px\" }}>\r\n                <Link href={linkLinkedIn} underline=\"none\" target=\"_blank\">\r\n                  {linkLinkedIn}\r\n                </Link>\r\n              </Grid>\r\n            </>}\r\n          {!editLinks && linkGit &&\r\n            <>\r\n              <Grid item xs={1}>\r\n                <GitHubIcon fontSize=\"large\" />\r\n              </Grid>\r\n              <Grid item xs={11} sx={{ paddingBottom: \"12px\" }}>\r\n                <Link href={linkGit} underline=\"none\" target=\"_blank\">\r\n                  {linkGit}\r\n                </Link>\r\n              </Grid>\r\n            </>\r\n          }\r\n\r\n          <Grid item xs={12}>\r\n            <Collapse in={editLinks}>\r\n              <Grid\r\n                container\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                rowSpacing={2}\r\n                columnSpacing={2}\r\n              >\r\n\r\n                <Grid item xs={1}>\r\n                  <LinkedInIcon color=\"primary\" fontSize=\"large\" />\r\n                </Grid>\r\n                <Grid item xs={11} sx={{ paddingBottom: \"20px\" }}>\r\n                  <TextField\r\n                    label=\"Linked In\"\r\n                    variant=\"standard\"\r\n                    value={linkLinkedIn}\r\n                    onChange={(e) => { setLinkLinkedIn(e.target.value) }}\r\n\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  <GitHubIcon fontSize=\"large\" />\r\n                </Grid>\r\n                <Grid item xs={11} sx={{ paddingBottom: \"20px\" }}>\r\n                  <TextField\r\n                    label=\"Git Hub\"\r\n                    variant=\"standard\"\r\n                    onChange={(e) => { setLinkGit(e.target.value) }}\r\n                    value={linkGit}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ marginBottom: \"1rem\" }} container justifyContent=\"right\">\r\n                  <Button variant=\"text\" onClick={() => { saveLinks() }}>Save</Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Collapse>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default LinksForm\r\n","import { styled } from '@mui/material/styles'\r\nimport MuiAppBar from '@mui/material/AppBar'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport Typography from '@mui/material/Typography'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport MenuIcon from '@mui/icons-material/Menu'\r\nimport {Link} from 'react-router-dom'\r\nimport './Header.css'\r\nconst drawerWidth = 240\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== 'open',\r\n})(({ theme, open }) => ({\r\n  zIndex: 1201,\r\n  transition: theme.transitions.create(['width', 'margin'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  ...(open && {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  }),\r\n}))\r\n\r\nexport default function Header({ open, setOpen }) {\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\" open={open}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={() => setOpen(true)}\r\n            edge=\"start\"\r\n            sx={{\r\n              marginRight: '36px',\r\n              ...(open && { display: 'none' }),\r\n            }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap component=\"div\">\r\n            <a className=\"link\" href=\"/\">Tech Connect YYC</a>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  )\r\n}\r\n","import AppBar from '@mui/material/AppBar'\r\nimport ToolBar from '@mui/material/Toolbar'\r\nimport Typography from '@mui/material/Typography'\r\nimport List from '@mui/material/List'\r\nimport ListItem from '@mui/material/ListItem'\r\nimport ListItemText from '@mui/material/ListItemText'\r\nimport { Link } from 'react-router-dom'\r\nimport React from 'react'\r\n\r\nconst Footer = () => {\r\n\r\n  return (\r\n    <AppBar color=\"inherit\" position=\"static\" sx={{ top: 'auto', bottom: 0 }}>\r\n      <ToolBar>\r\n        <List component=\"nav\">\r\n          <ListItem component=\"div\">\r\n            <ListItemText inset>\r\n              <Typography color=\"default\" variant=\"subtitle1\">\r\n                <Link to=\"/jobs\">Find Jobs</Link>\r\n              </Typography>\r\n            </ListItemText>\r\n            <ListItemText inset>\r\n              <Typography color=\"default\" variant=\"subtitle1\">\r\n                <Link to=\"/company/reviews\">Company Reviews</Link>\r\n              </Typography>\r\n            </ListItemText>\r\n\r\n            <ListItemText inset>\r\n              <Typography color=\"default\" variant=\"subtitle1\">\r\n                <Link to=\"/company/salaries\">Company Salaries</Link>\r\n              </Typography>\r\n            </ListItemText>\r\n          </ListItem>\r\n        </List>\r\n      </ToolBar>\r\n    </AppBar>\r\n\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Typography from '@mui/material/Typography';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport ContactPageIcon from '@mui/icons-material/ContactPage';\r\nimport GroupIcon from '@mui/icons-material/Group';\r\nimport PostAddIcon from '@mui/icons-material/PostAdd';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst openedMixin = (theme) => ({\r\n  width: drawerWidth,\r\n  transition: theme.transitions.create('width', {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.enteringScreen,\r\n  }),\r\n  overflowX: 'hidden',\r\n});\r\n\r\nconst closedMixin = (theme) => ({\r\n  transition: theme.transitions.create('width', {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  overflowX: 'hidden',\r\n  width: `calc(${theme.spacing(7)} + 1px)`,\r\n  [theme.breakpoints.up('sm')]: {\r\n    width: `calc(${theme.spacing(7)} + 1px)`,\r\n  },\r\n});\r\n\r\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\r\n  ({ theme, open }) => ({\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n    boxSizing: 'border-box',\r\n    ...(open && {\r\n      ...openedMixin(theme),\r\n      '& .MuiDrawer-paper': openedMixin(theme),\r\n    }),\r\n    ...(!open && {\r\n      ...closedMixin(theme),\r\n      '& .MuiDrawer-paper': closedMixin(theme),\r\n    }),\r\n  }),\r\n);\r\n\r\nexport default function SideNavBar({ open, setOpen, DrawerHeader }) {\r\n  const navigate = useNavigate();\r\n  const theme = useTheme();\r\n\r\n  const userMenuItems = [\r\n    { text: 'Job Board', icon: <WorkIcon />, link: '/jobs' },\r\n    { text: 'Profile', icon: <AccountBoxIcon />, link: '/profile' },\r\n    { text: 'My Applications', icon: <ContactPageIcon />, link: '/my_applications' },\r\n    { text: 'Setting', icon: <SettingsIcon />, link: '/setting' },\r\n    { text: 'Logout', icon: <LogoutIcon />, link: '/logout'},\r\n\r\n  ]\r\n  const recruiterMenuItems = [\r\n    { text: 'Post Job', icon: <PostAddIcon />, link: '/post_jobs' },\r\n    { text: 'Applications', icon: <GroupIcon />, link: '/applications' },\r\n  ]\r\n\r\n  const handleNav = (link) => {\r\n    navigate(link);\r\n  }\r\n  return (\r\n    <>\r\n      <Drawer variant=\"permanent\" open={open}>\r\n        <DrawerHeader>\r\n          <IconButton onClick={() => { setOpen(false) }}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </DrawerHeader>\r\n        <Divider />\r\n        <List>\r\n          {userMenuItems.map((item, index) => (\r\n            <ListItem button key={item.text} onClick={() => handleNav(item.link)}>\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button >\r\n            {open && <Typography variant=\"overline\" display=\"block\" gutterBottom>Recruiter</Typography>}\r\n          </ListItem>\r\n          {recruiterMenuItems.map((item, index) => (\r\n            <ListItem button key={item.text} onClick={() => handleNav(item.link)}>\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      </>\r\n  );\r\n}","import * as React from 'react';\r\nimport { useState } from \"react\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios'\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright © '}\r\n      \r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\n\r\nexport default function SignUp() {\r\n\r\n  const [inputs, setInputs] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    setInputs(values => ({...values, [name]: value}))\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    axios.post('/user/add_user',{\r\n      inputs\r\n    })\r\n    .then(function (response) {\r\n      if(response.status === 200)\r\n        navigate('/signIn')\r\n    })\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgColor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  autoComplete=\"given-name\"\r\n                  name=\"firstName\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  value={inputs.firstName || \"\"} \r\n                  onChange={handleChange}\r\n                  autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastName\"\r\n                  value={inputs.lastName || \"\"} \r\n                  onChange={handleChange}\r\n                  autoComplete=\"family-name\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  value={inputs.email || \"\"} \r\n                  onChange={handleChange}\r\n                  autoComplete=\"email\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  value={inputs.password || \"\"} \r\n                  onChange={handleChange}\r\n                  autoComplete=\"new-password\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link to=\"/signIn\">Already have an account? Sign in</Link>\r\n                  \r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        <Copyright sx={{ mt: 5 }} />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport axios from 'axios'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright © '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function SignIn({setUser}) {\r\n\r\n  const [inputs, setInputs] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    setInputs(values => ({...values, [name]: value}))\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    axios.post('/user/login',{\r\n      email:inputs.email,\r\n      password: inputs.password\r\n    })\r\n    .then(function (response) {\r\n      if(response.data)\r\n        setUser(response.data)\r\n        navigate('/profile')\r\n    })\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgColor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={inputs.email || \"\"} \r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={inputs.password || \"\"} \r\n              onChange={handleChange}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link to=\"#\">Forgot Password?</Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to=\"/signUp\">Don't have an account? Sign Up</Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        <Copyright sx={{ mt: 8, mb: 4 }} />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}","import '../App.css'\r\nimport InputAdornment from '@mui/material/InputAdornment'\r\nimport SearchIcon from '@mui/icons-material/Search'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport TextField from '@mui/material/TextField'\r\nimport Button from '@mui/material/Button'\r\nimport { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst LandingPage = () => {\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const navigate = useNavigate()\r\n  const handleOnclick = () => {\r\n    navigate(`jobs/${searchQuery}`)\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"App-header\">\r\n        <h1 className=\"App-title\">Tech Connect YYC</h1>\r\n        <div className=\"App\">\r\n          <TextField\r\n            color=\"secondary\"\r\n            margin=\"normal\"\r\n            id=\"searchJob\"\r\n            label=\"Search Job \"\r\n            name=\"searchJob\"\r\n            autoComplete=\"searchJob\"\r\n            autoFocus\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <IconButton\r\n                    type=\"submit\"\r\n                    variant=\"default\"\r\n                    sx={{ mt: 3, mb: 2, ml: 3 }}\r\n                    onClick={() => handleOnclick()}\r\n                  >\r\n                    <SearchIcon />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n\r\n          {/* <Button\r\n            type=\"submit\"\r\n            variant=\"default\"\r\n            sx={{ mt: 3, mb: 2, ml: 3}}\r\n            onClick = {()=>handleOnclick()}\r\n          >\r\n            Search\r\n          </Button> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LandingPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport { styled } from '@mui/material/styles'\r\nimport Card from '@mui/material/Card'\r\nimport CardHeader from '@mui/material/CardHeader'\r\nimport CardMedia from '@mui/material/CardMedia'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport CardActions from '@mui/material/CardActions'\r\nimport Collapse from '@mui/material/Collapse'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Typography from '@mui/material/Typography'\r\nimport { red } from '@mui/material/colors'\r\nimport FavoriteIcon from '@mui/icons-material/Favorite'\r\nimport ShareIcon from '@mui/icons-material/Share'\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\r\nimport axios from 'axios'\r\n\r\nconst ExpandMore = styled((props) => {\r\n  const { expand, ...other } = props\r\n  return <IconButton {...other} />\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n  marginLeft: 'auto',\r\n  transition: theme.transitions.create('transform', {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}))\r\n\r\nexport default function JobCard({ query }) {\r\n\r\n  const [expanded, setExpanded] = useState(false)\r\n  const [jobs, setJobs] = useState('')\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded)\r\n  }\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (query) {\r\n        let fetchResult = await fetch('/job/search/'+query)\r\n        let JobList = await fetchResult.json()\r\n        console.log('JobList is:', JobList)\r\n        setJobs(JobList)\r\n      } else {\r\n        console.log(query)\r\n        console.log('Fetching Job data!')\r\n        let fetchResult = await fetch('/job/api/jobs')\r\n        let JobList = await fetchResult.json()\r\n        console.log('JobList is:', JobList)\r\n        setJobs(JobList)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [query])\r\n  return (\r\n    <>\r\n      {jobs &&\r\n        jobs.map((job) => {\r\n          return (\r\n            <Card key={job._id} elevation={3} sx={{marginBottom:\"1em\", marginRight:\"1em\", width:\"45%\"}}>\r\n              <CardHeader\r\n                avatar={\r\n                  <Avatar sx={{ bgcolor: red[500] }} aria-label=\"jobs\">\r\n                    R\r\n                  </Avatar>\r\n                }\r\n                action={\r\n                  <IconButton aria-label=\"settings\">\r\n                    {/* <MoreVertIcon /> */}\r\n                  </IconButton>\r\n                }\r\n                title={job.Title || job.title}\r\n                subheader={job.Company || job.company}\r\n              //  skills = {job.skills || job.Skills}\r\n              />\r\n\r\n              <CardContent>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  {job.Description || job.description}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  {job.timestamps?.toString() || job.Timestamps?.toString()}\r\n                </Typography>\r\n                <Typography>{job.skills || job.Skills} </Typography>\r\n                <Typography color=\"text.primary\">\r\n                  <a href={job.link}>{job.link}</a>\r\n                 \r\n                </Typography>\r\n\r\n\r\n\r\n              </CardContent>\r\n              <CardActions disableSpacing>\r\n                {/* <IconButton aria-label=\"add to favorites\">\r\n                  <FavoriteIcon />\r\n                </IconButton>\r\n                <IconButton aria-label=\"share\">\r\n                  <ShareIcon />\r\n                </IconButton> */}\r\n                {/* <Typography>Learn More</Typography> */}\r\n                <ExpandMore\r\n                  expand={expanded}\r\n                  onClick={handleExpandClick}\r\n                  aria-expanded={expanded}\r\n                  aria-label=\"show more\"\r\n                >\r\n                  <ExpandMoreIcon />\r\n                </ExpandMore>\r\n              </CardActions>\r\n              <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                <CardContent>\r\n                  <Typography></Typography>\r\n\r\n                  <Typography></Typography>\r\n                  <Typography></Typography>\r\n                  <Typography></Typography>\r\n                  <Typography></Typography>\r\n                </CardContent>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })}\r\n    </>\r\n  )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { styled } from '@mui/material/styles'\r\nimport Box from '@mui/material/Box'\r\nimport TextField from '@mui/material/TextField'\r\nimport Button from '@mui/material/Button'\r\n\r\nimport Paper from '@mui/material/Paper'\r\nimport Grid from '@mui/material/Grid'\r\nimport JobCard from '../components/JobsCard'\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}))\r\n\r\nconst JobsPage = () => {\r\n  const [jobs, setJobs] = useState('')\r\n  const inputQuery = useRef()\r\n  const [query, setQuery] = useState(useParams().q)\r\n  console.log(inputQuery.current)\r\n  console.log(query)\r\n  const navigate = useNavigate()\r\n  useEffect(()=>{\r\n    if(query)\r\n    navigate(`/jobs/${query}`)\r\n  },[query])\r\n  \r\n  return (\r\n    <Box sx={{ flexGrow: 1, maxWidth: '55%'}}>\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{ minHeight: '100vh' }}\r\n      >\r\n        <Grid item xs={12}>\r\n        <TextField\r\n            color=\"secondary\"\r\n            margin=\"normal\"\r\n            id=\"searchJob\"\r\n            label=\"Search Job \"\r\n            name=\"searchJob\"\r\n            autoComplete=\"searchJob\"\r\n            autoFocus\r\n            inputRef={inputQuery}\r\n          />\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"default\"\r\n            sx={{ mt: 3, mb: 2, ml: 3}}\r\n            onClick={()=>{setQuery(inputQuery.current.value)}}\r\n          >\r\n            Search\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12} sx={{paddingTop: \"2em\", paddingLeft: \"2em\"}} container justifyContent=\"center\">\r\n            <JobCard query={query} />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default JobsPage","\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport SignIn from '../components/SignIn';\r\nimport ProfileForm from '../components/ProfileForm'\r\nimport { useEffect } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    padding: theme.spacing(3),\r\n  },\r\n\r\n}));\r\n\r\nexport default function ProfilePage({setUser, user}) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  return (\r\n    <>\r\n      <Container maxWidth={'xl'} >\r\n        <Box className={classes.content}\r\n         sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }} >\r\n\r\n          <h1>Profile</h1>\r\n          {!user&&<SignIn setUser={setUser}/>}\r\n          {user && <ProfileForm user={user}/>}\r\n\r\n          </Box>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\n","import Container from '@mui/material/Container';\r\nimport Paper from '@mui/material/Paper';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    padding: theme.spacing(3),\r\n  },\r\n\r\n}));\r\n\r\nexport default function MyApplicationPage() {\r\n  const classes = useStyles();\r\n\r\n  const theme = useTheme();\r\n  return (\r\n    <>\r\n      <Container maxWidth={'xl'} >\r\n        <Paper elevation={3} className={classes.content}\r\n         sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }} >\r\n\r\n          <h1>My applications components here</h1>\r\n          </Paper>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\n","import Container from \"@mui/material/Container\";\r\nimport { styled } from \"@mui/system\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { Grid, IconButton, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport Button from \"@mui/material/Button\";\r\nimport MuiTextField from \"@mui/material/TextField\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function SettingPage({ user }) {\r\n  const classes = useStyles();\r\n  const [profile, setProfile] = useState();\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [editInfo, setEditInfo] = useState(false);\r\n  const theme = useTheme();\r\n\r\n  const TextField = styled(MuiTextField)({\r\n    width: \"100%\",\r\n  });\r\n  const ListItem = styled(\"li\")(({ theme }) => ({\r\n    margin: theme.spacing(0.5),\r\n    float: \"left\",\r\n  }));\r\n\r\n  useEffect(() => {\r\n    setFirstName(user?.firstName);\r\n    setLastName(user?.lastName);\r\n    setPassword(user?.password);\r\n    setEmail(user?.email);\r\n  }, [user]);\r\n\r\n  const updateUser = async () => {\r\n    const response = await axios.post(\"/user/update\", {\r\n      newUser: {\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        password,\r\n      },\r\n      id: user._id,\r\n    });\r\n  };\r\n\r\n  console.log(user);\r\n  return (\r\n    <>\r\n      <Container maxWidth={\"xl\"}>\r\n        <Paper\r\n          elevation={3}\r\n          className={classes.content}\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Grid\r\n            container\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            rowSpacing={2}\r\n            columnSpacing={2}\r\n          >\r\n            <Grid item xs={12} container justifyContent=\"center\">\r\n              <Typography variant=\"h3\" sx={{ paddingBottom: \"0px\" }}>\r\n                Account Settings\r\n              </Typography>{\" \"}\r\n              {!editInfo && (\r\n                <Button\r\n                  sx={{ paddingX: \"16px\" }}\r\n                  onClick={() => {\r\n                    setEditInfo(true);\r\n                  }}\r\n                >\r\n                  <EditIcon />\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n            {!editInfo ? (\r\n              <>\r\n                <Grid item xs={12} container justifyContent=\"center\">\r\n                  <Typography variant=\"p\" sx={{ paddingX: \"12px\" }}>\r\n                    <strong>First Name:</strong> {firstName}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} container justifyContent=\"center\">\r\n                  <Typography variant=\"p\" sx={{ paddingY: \"0px\" }}>\r\n                    <strong>Last Name:</strong> {lastName}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} container justifyContent=\"center\">\r\n                  <Typography variant=\"p\" sx={{ paddingX: \"12px\" }}>\r\n                    <strong>Password:</strong> {password?.length} characters long\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} container justifyContent=\"center\">\r\n                  <Typography variant=\"p\" sx={{ paddingX: \"12px\" }}>\r\n                    <strong>Email:</strong> {email}\r\n                  </Typography>\r\n                </Grid>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Grid item xs={12} container justifyContent=\"center\">\r\n                  <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"First Name\"\r\n                    variant=\"outlined\"\r\n                    value={firstName}\r\n                    size=\"small\"\r\n                    onChange={(e) => {\r\n                      setFirstName(e.target.value);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} container justifyContent=\"center\">\r\n                  <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Last Name\"\r\n                    variant=\"outlined\"\r\n                    value={lastName}\r\n                    size=\"small\"\r\n                    onChange={(e) => {\r\n                      setLastName(e.target.value);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} container justifyContent=\"center\">\r\n                  <TextField\r\n                    id=\"outlined-password-input\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => {\r\n                      setPassword(e.target.value);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} container justifyContent=\"center\">\r\n                  <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    value={email}\r\n                    size=\"small\"\r\n                    onChange={(e) => {\r\n                      setEmail(e.target.value);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Button\r\n                  onClick={() => {\r\n                    setEditInfo(false);\r\n                    updateUser();\r\n                  }}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </>\r\n            )}\r\n          </Grid>\r\n\r\n          {/* <ul>\r\n            <li>\r\n              <p>{firstName}</p>\r\n              {editInfo === true && (\r\n                <input\r\n                  value={firstName}\r\n                  onChange={(e) => {\r\n                    setFirstName(e.target.value);\r\n                  }}\r\n                />\r\n              )}\r\n              <button>Edit</button>\r\n            </li>\r\n            <li>\r\n              <input\r\n                value={lastName}\r\n                onChange={(e) => {\r\n                  setLastName(e.target.value);\r\n                }}\r\n              />\r\n            </li>\r\n            <li>\r\n              <input\r\n                value={password}\r\n                type=\"password\"\r\n                onChange={(e) => {\r\n                  setPassword(e.target.value);\r\n                }}\r\n              />\r\n            </li>\r\n            <li>\r\n              <input\r\n                value={email}\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                }}\r\n              />\r\n            </li>\r\n          </ul>\r\n          <button\r\n            onClick={() => {\r\n              updateUser();\r\n            }}\r\n          >\r\n            Save\r\n          </button> */}\r\n        </Paper>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport axios from \"axios\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterMoment\";\r\nimport DatePicker from \"@mui/lab/DatePicker\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\n\r\n\r\n\r\n// Validation Schema with Yup\r\nconst validationSchema = Yup.object().shape({\r\n  title: Yup.string().required(\"Title Required\"),\r\n  description: Yup.string().min(10, \"Too short minimum of 10 characters required\").required(\"Required\"),\r\n  skills: Yup.string().required(\"Required\"),\r\n  company: Yup.string().required(\"Required\"),\r\n  availability: Yup.date().required(\"Required\"),\r\n  expiryDate: Yup.date().required(\"Required\"),\r\n  link: Yup.string().url().required(\"Url Required\"),\r\n});\r\n\r\n// Style Function\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(2),\r\n  \r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"500px\",\r\n      },\r\n      \"& .MuiButtonBase-root\": {\r\n        margin: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\nconst JobForm = () => {\r\n  const classes = useStyles();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: '',\r\n      description: '',\r\n      company: '',\r\n      skills: '',\r\n      availability: new Date(),\r\n      expiryDate: null,\r\n      link: ''\r\n    },\r\n    validationSchema: validationSchema,\r\n     onSubmit: (values) => {\r\n      console.log(\"Form data\", values)\r\n      axios({\r\n        method: 'post',\r\n        url: '/job/post_jobs',\r\n        data: values\r\n      })\r\n      .then(function (response) {\r\n        console.log(response.data);\r\n      });\r\n      formik.resetForm()\r\n    },\r\n  });\r\n\r\n\r\n  return (\r\n    <>\r\n          <form className={classes.root} onSubmit={formik.handleSubmit}>\r\n          <TextField\r\n              id =\"title\"\r\n              name=\"title\"\r\n              label=\"Title\"\r\n              variant=\"outlined\"\r\n              value={formik.values.title}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.title && Boolean(formik.errors.title)}\r\n              helperText={formik.touched.title && formik.errors.title}\r\n          />\r\n          <TextField\r\n              id =\"description\"\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              variant=\"outlined\"\r\n              multiline\r\n              rows={5}\r\n              maxrows={10}\r\n              value={formik.values.description}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.description && Boolean(formik.errors.description)}\r\n              helperText={formik.touched.description && formik.errors.description}\r\n          />\r\n            <TextField\r\n              id =\"skills\"\r\n              name=\"skills\"\r\n              label=\"Skills\"\r\n              variant=\"outlined\"\r\n              value={formik.values.skills}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.skills && Boolean(formik.errors.skills)}\r\n              helperText={formik.touched.skills && formik.errors.skills}\r\n          />\r\n          <TextField\r\n              id =\"company\"\r\n              name=\"company\"\r\n              label=\"Company\"\r\n              variant=\"outlined\"\r\n              value={formik.values.company}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.company && Boolean(formik.errors.company)}\r\n              helperText={formik.touched.company && formik.errors.company}\r\n          />\r\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n              <DatePicker\r\n                id=\"availability\"\r\n                name=\"availability\"\r\n                label=\"Availability\"\r\n                variant=\"outlined\"\r\n                value= {formik.values.availability}\r\n                onChange = { value => formik.setFieldValue(\"availability\", value)}\r\n                renderInput={(params) => <TextField {...params} />}\r\n                error={formik.touched.availability && Boolean(formik.errors.availability)}\r\n                helperText={formik.touched.availability && formik.errors.availability}\r\n              />\r\n              <DatePicker\r\n                id=\"expiryDate\"\r\n                name=\"expiryDate\"\r\n                label=\"Expiry Date\"\r\n                inputVariant=\"outlined\"\r\n                value={formik.values.expiryDate}\r\n                onChange= {value => formik.setFieldValue(\"expiryDate\", value)}\r\n                onBlur= {value => formik.setFieldTouched(\"expiryDate\",value )}\r\n                renderInput={(params) => <TextField {...params} />}\r\n                error={formik.touched.expiryDate && Boolean(formik.errors.expiryDate)}\r\n                helperText={formik.touched.expiryDate && formik.errors.expiryDate}\r\n              />\r\n            </LocalizationProvider>\r\n         \r\n            <TextField\r\n              id =\"link\"\r\n              name=\"link\"\r\n              label=\"Link\"\r\n              variant=\"outlined\"\r\n              value={formik.values.link}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.link && Boolean(formik.errors.link)}\r\n              helperText={formik.touched.link && formik.errors.link}\r\n          />\r\n             <div>\r\n              <Button onClick={formik.resetForm} variant=\"contained\" color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"Submit\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                disabled={!formik.isValid} //|| formik.isSubmitting}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </div>\r\n           \r\n          </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobForm;","import Container from '@mui/material/Container';\r\nimport Paper from '@mui/material/Paper';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport JobForm from '../components/JobForm'\r\nimport OldJobForm from '../components/OldJobForm'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    padding: theme.spacing(2),\r\n  },\r\n\r\n}));\r\n\r\n\r\n\r\nexport default function PostJobPage() {\r\n  const classes = useStyles();\r\n\r\n  const theme = useTheme();\r\n  return (\r\n    <>\r\n      <Container maxWidth={'xl'} >\r\n        <Paper elevation={3} className={classes.content}\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }} >\r\n          <h1>Job form</h1>\r\n          <JobForm />\r\n        </Paper>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterMoment\";\r\nimport DatePicker from \"@mui/lab/DatePicker\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\nimport moment from \"moment\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n//Initial values for each input in job form using Formik\r\nconst INITIAL_FORM_STATE = {\r\n  Title: \"\",\r\n  Description: \"\",\r\n  skills: \"\",\r\n  Company: \"\",\r\n  Availability: null,\r\n  Expiry: null,\r\n  Link: \"\",\r\n};\r\n\r\n// Validation Schema with Yup\r\nconst FORM_VALIDATION = Yup.object().shape({\r\n  Title: Yup.string().required(\"Required\"),\r\n  Description: Yup.string().min(10, \"Too Short\").required(\"Required\"),\r\n  skills: Yup.string().required(\"Required\"),\r\n  Company: Yup.string().required(\"Required\"),\r\n  Availability: Yup.string().required(\"Required\"),\r\n  ExpiryDate: Yup.string().required(\"Required\"),\r\n  Link: Yup.string().required(\"Required\"),\r\n});\r\n\r\n// Style Function\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(2),\r\n\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"500px\",\r\n    },\r\n    \"& .MuiButtonBase-root\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst OldJobForm = () => {\r\n  const classes = useStyles();\r\n\r\n\r\n  //  Declaring use state variables for Title textbox\r\n  const [Title, setTitle] = useState(\"\");\r\n  const [TitleTouched, setTitleTouched] = useState(false);\r\n  const TitleisValid = Title.trim() !== \"\";\r\n  const TitleInputisInvalid = !TitleisValid && TitleTouched;\r\n\r\n  // Declaring use state variables for Description textbox\r\n  const [Description, setDescription] = useState(\"\");\r\n  const [DescriptionTouched, setDescriptionTouched] = useState(false);\r\n  const DescriptionisValid = Description.trim() !== \"\";\r\n  const DescriptionInputisInvalid = !DescriptionisValid && DescriptionTouched;\r\n\r\n  // Declaring use state variables Skills textbox\r\n  const [skills, setSkills] = useState(\"\");\r\n  const [SkillsTouched, setSkillsTouched] = useState(false);\r\n  const SkillsisValid = skills.trim() !== \"\";\r\n  const SkillsInputisInvalid = !SkillsisValid && SkillsTouched;\r\n\r\n  // Declaring use state variable for Company textbox\r\n  const [Company, setCompany] = useState(\"\");\r\n  const [CompanyTouched, setCompanyTouched] = useState(false);\r\n  const CompanyisValid = Company.trim() !== \"\";\r\n  const CompanyInputisInvalid = !CompanyisValid && CompanyTouched;\r\n\r\n  // Declaring use state variable for Availability textbox\r\n  const [Availability, setAvailability] = useState(\"\");\r\n  //const [AvailabilityTouched, setAvailabilityTouched] = useState(false)\r\n  const AvailabilityisValid = Availability !== null;\r\n  const AvailabilityisInvalid = !AvailabilityisValid; //AvailabilityTouched;\r\n\r\n  // Declaring use state variable for ExpiryDate Textbox\r\n  const [ExpiryDate, setExpiryDate] = useState(null);\r\n  //const [ExpiryDateTouched, setExpiryDateTouched] = useState(false)\r\n  const ExpiryDateisValid = ExpiryDate !== null;\r\n  const ExpiryDateisInvalid = !ExpiryDateisValid; //ExpiryDateTouched;\r\n\r\n  // Declaring use state variables for Link Textbox\r\n  const [Link, setlink] = useState(\"\");\r\n  const [LinkisTouched, setlinkTouched] = useState(false);\r\n  const LinkisValid = Link.trim() !== \"\";\r\n  const LinkisInvalid = !LinkisValid && LinkisTouched;\r\n\r\n  // Function to perform when text box is selected\r\n  const onBlur = (event, setter) => {\r\n    setter(true);\r\n  };\r\n\r\n  // Function to perform when text box is used\r\n  const onInputUpdate = (event, setter) => {\r\n    let updatedValue = event.target.value;\r\n    setter(updatedValue);\r\n  };\r\n  // Function to reset form after clicking submit\r\n  const reset = () => {\r\n    // Reset Title\r\n    setTitle(\"\");\r\n    setTitleTouched(false);\r\n    // Reset Description\r\n    setDescription(\"\");\r\n    setDescriptionTouched(false);\r\n    //Reset Skills\r\n    setSkills(\"\");\r\n    setSkillsTouched(false);\r\n    //Reset Company\r\n    setCompany(\"\");\r\n    setCompanyTouched(false);\r\n    //Reset Availability\r\n    setAvailability(null);\r\n    //setAvailabilityTouched(false);\r\n    //Reset Expiry Date\r\n    setExpiryDate(null);\r\n    //setExpiryDateTouched(false);\r\n    //Reset Link\r\n    setlink(\"\");\r\n    setlinkTouched(false);\r\n  };\r\n\r\n  // Check to see the form has all the required fields before submitting\r\n  let formIsValid = false;\r\n  if (\r\n    TitleisValid &&\r\n    DescriptionisValid &&\r\n    SkillsisValid &&\r\n    CompanyisValid &&\r\n    AvailabilityisValid &&\r\n    ExpiryDateisValid &&\r\n    LinkisValid\r\n  ) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  // Post data to the following endpoint '/job/submit' using axios instead of fetch\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(Title)\r\n    axios\r\n      .post(\"/job/post_jobs\", {\r\n        title: Title,\r\n        description: Description,\r\n        skills,\r\n        company: Company,\r\n        availability: Availability,\r\n        expiryDate: ExpiryDate,\r\n        link: Link,\r\n      })\r\n      .then(function (response) {\r\n        console.log(response.data);\r\n      });\r\n      reset()\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n          initialValues={{ ...INITIAL_FORM_STATE }}\r\n          validationSchema={FORM_VALIDATION}\r\n          onSubmit={(values) => {\r\n            console.log(\"Hello\");\r\n          }}\r\n        >\r\n          <Form className={classes.root}>\r\n            <TextField\r\n              name=\"Title\"\r\n              label=\"Title\"\r\n              variant=\"outlined\"\r\n              value={Title}\r\n              onBlur={(event) => onBlur(event, setTitleTouched)}\r\n              onChange={(event) => onInputUpdate(event, setTitle)}\r\n              helperText={TitleInputisInvalid ? \"Enter Title\" : null}\r\n            />\r\n            <TextField\r\n              name=\"Description\"\r\n              label=\"Description\"\r\n              variant=\"outlined\"\r\n              value={Description}\r\n              multiline\r\n              rows={5}\r\n              maxrows={10}\r\n              onBlur={(event) => onBlur(event, setDescriptionTouched)}\r\n              onChange={(event) => onInputUpdate(event, setDescription)}\r\n              helperText={\r\n                DescriptionInputisInvalid ? \"Enter Description\" : null\r\n              }\r\n            />\r\n            <TextField\r\n              name=\"skills\"\r\n              label=\"Skills\"\r\n              variant=\"outlined\"\r\n              value={skills}\r\n              onBlur={(event) => onBlur(event, setSkillsTouched)}\r\n              onChange={(event) => onInputUpdate(event, setSkills)}\r\n              helperText={SkillsInputisInvalid ? \"Enter Skills\" : null}\r\n            />\r\n            <TextField\r\n              name=\"Company\"\r\n              label=\"Company\"\r\n              variant=\"outlined\"\r\n              value={Company}\r\n              onBlur={(event) => onBlur(event, setCompanyTouched)}\r\n              onChange={(event) => onInputUpdate(event, setCompany)}\r\n              helperText={CompanyInputisInvalid ? \"Enter Company\" : null}\r\n            />\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n              <DatePicker\r\n                name=\"Availability\"\r\n                label=\"Availability\"\r\n                value={Availability}\r\n                onChange={(newValue) => setAvailability(newValue)}\r\n                renderInput={(params) => <TextField {...params} />}\r\n              />\r\n              <DatePicker\r\n                name=\"Expiry\"\r\n                label=\"Expiry Date\"\r\n                value={ExpiryDate}\r\n                onChange={(newValue) => {\r\n                  setExpiryDate(newValue);\r\n                }}\r\n                renderInput={(params) => <TextField {...params} />}\r\n              />\r\n            </LocalizationProvider>\r\n            <TextField\r\n              name=\"Link\"\r\n              label=\"Link\"\r\n              variant=\"outlined\"\r\n              value={Link}\r\n              onBlur={(event) => onBlur(event, setlinkTouched)}\r\n              onChange={(event) => onInputUpdate(event, setlink)}\r\n              helperText={LinkisInvalid ? \"Enter Link\" : null}\r\n            />\r\n            <div>\r\n              <Button variant=\"contained\" color=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                onClick={handleSubmit}\r\n                type=\"Submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={!formIsValid}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </div>\r\n            </Form>\r\n        </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OldJobForm;","import Container from '@mui/material/Container';\r\nimport Paper from '@mui/material/Paper';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    padding: theme.spacing(3),\r\n  },\r\n\r\n}));\r\n\r\nexport default function ApplicationsPage() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  return (\r\n    <>\r\n      <Container maxWidth={'xl'} >\r\n        <Paper elevation={3} className={classes.content}\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }} >\r\n\r\n          <h1>Applications page components here</h1>\r\n        </Paper>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\n","import { useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\n\r\nconst LogOut = ({setUser}) => {\r\n    const navigate = useNavigate() \r\n\r\n    useEffect(() => {\r\n        fetch('/user/logOut').then(() => {\r\n            setUser(null)\r\n            navigate('/')\r\n        }) \r\n    }, [])\r\n    return null\r\n}\r\n\r\nexport default LogOut","import {useEffect, useState} from 'react'\r\nimport { Routes, Route } from 'react-router-dom'\r\nimport SignUp from '../components/SignUp'\r\nimport SignIn from '../components/SignIn'\r\nimport LandingPage from './LandingPage'\r\nimport JobsPage from './JobsPage'\r\nimport ProfilePage from './ProfilePage'\r\nimport MyApplicationPage from './MyApplicationsPage'\r\nimport SettingPage from './SettingPage'\r\nimport PostJobPage from './PostJobPage'\r\nimport ApplicationsPage from './ApplicationsPage'\r\nimport axios from 'axios'\r\nimport LogOut from '../components/LogOut'\r\n\r\n\r\nfunction MainContentBody() {\r\n  const [user,setUser] = useState()\r\n  useEffect(()=>{\r\n    axios.post('/user/loggedInUser')\r\n    .then(function (response) {\r\n      if(response.data){\r\n        setUser(response.data)\r\n        console.log(response)\r\n      }\r\n    })\r\n  }, [])\r\n  return (  \r\n    <>\r\n      <Routes>\r\n        <Route path=\"/\" element={<LandingPage />} />\r\n        <Route path=\"/jobs\" element={<JobsPage />} />\r\n        <Route path=\"/jobs/:q\" element={<JobsPage />} />\r\n\r\n        <Route path=\"/profile\" element={<ProfilePage  setUser={setUser} user={user}/>} />\r\n        <Route path=\"/my_applications\" element={<MyApplicationPage />} />\r\n        <Route path=\"/setting\" element={<SettingPage user={user} />} />\r\n\r\n        <Route path=\"/post_jobs\" element={<PostJobPage />} />\r\n        <Route path=\"/applications\" element={<ApplicationsPage />} />\r\n        <Route path=\"/signUp\" element={<SignUp />} />\r\n        <Route path=\"/signIn\" element={<SignIn setUser={setUser}/>} />\r\n        <Route path=\"/logOut\" element={<LogOut setUser={setUser}/>} />\r\n\r\n      </Routes>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default MainContentBody\r\n","import * as React from 'react';\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport Box from '@mui/material/Box';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport SideNavBar from '../components/SideNavBar';\r\nimport MainContentBody from './MainContentBody';\r\n\r\nconst DrawerHeader = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n}));\r\n\r\n\r\n\r\nexport default function MainLayout() {\r\n\r\n  //state for side navigation bar opened/closed\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ display: 'flex' }}>\r\n        <CssBaseline />\r\n\r\n        <Header open={open} setOpen={setOpen} />\r\n        <SideNavBar open={open} setOpen={setOpen} DrawerHeader={DrawerHeader} /> \r\n\r\n        {/* Main Content area */}\r\n        <Box sx={{ flexGrow: 1, p: 3, marginBottom: '10em'}}>\r\n          <DrawerHeader />\r\n          <MainContentBody />\r\n        </Box>\r\n\r\n      </Box>\r\n      <Footer />\r\n\r\n    </>\r\n  );\r\n}","import React from \"react\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\n\r\nimport \"./App.css\";\r\nimport MainLayout from \"./pages/MainLayout\";\r\n\r\nconst theme = createTheme();\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={theme}>\r\n        <MainLayout />\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}