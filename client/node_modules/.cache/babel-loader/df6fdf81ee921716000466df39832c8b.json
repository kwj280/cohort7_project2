{"ast":null,"code":"var _jsxFileName = \"/home/woojae/cohort7_project2/src/components/JobForm.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles, useTheme } from '@mui/styles';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { createTheme, ThemeProvider } from '@mui/material/styles'; //import {useForm, Controller} from \"react-hook-form\"\n// Style Function\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '500px'\n    },\n    '& .MuiButtonBase-root': {\n      margin: theme.spacing(2)\n    }\n  }\n}));\n\nconst JobForm2 = _ref => {\n  _s();\n\n  let {\n    handleClose\n  } = _ref;\n  const classes = useStyles(); //  Declaring use state variables for Title textbox\n\n  const [Title, setTitle] = useState(\"\");\n  const [TitleTouched, setTitleTouched] = useState(false);\n  const TitleisValid = Title.trim() !== \"\";\n  const TitleInputisInvalid = !TitleisValid && TitleTouched; // Declaring use state variables for Description textbox\n\n  const [Description, setDescription] = useState(\"\");\n  const [DescriptionTouched, setDescriptionTouched] = useState(false);\n  const DescriptionisValid = Description.trim() !== \"\";\n  const DescriptionInputisInvalid = !DescriptionisValid && DescriptionTouched; // Declaring use state variables Skills textbox\n\n  const [Skills, setSkills] = useState(\"\");\n  const [SkillsTouched, setSkillsTouched] = useState(false);\n  const SkillsisValid = Skills.trim() !== \"\";\n  const SkillsInputisInvalid = !SkillsisValid && SkillsTouched; // Declaring use state variable for Company textbox\n\n  const [Company, setCompany] = useState(\"\");\n  const [CompanyTouched, setCompanyTouched] = useState(false);\n  const CompanyisValid = Company.trim() !== \"\";\n  const CompanyInputisInvalid = !CompanyisValid && CompanyTouched; // Declaring use state variable for Availability textbox\n\n  const [Availability, setAvailability] = useState(\"\");\n  const [AvailabilityTouched, setAvailabilityTouched] = useState(false);\n  const AvailabilityisValid = Availability.trim() !== \"\";\n  const AvailabilityisInvalid = !AvailabilityisValid && AvailabilityTouched; // Declaring use state variable for ExpiryDate Textbox\n\n  const [ExpiryDate, setExpiryDate] = useState(\"\");\n  const [ExpiryDateTouched, setExpiryDateTouched] = useState(false);\n  const ExpiryDateisValid = ExpiryDate.trim() !== \"\";\n  const ExpiryDateisInvalid = !ExpiryDateisValid && ExpiryDateTouched; // Declaring use state variables for Link Textbox\n\n  const [Link, setlink] = useState(\"\");\n  const [LinkisTouched, setlinkTouched] = useState(false);\n  const LinkisValid = Link.trim() !== \"\";\n  const LinkisInvalid = !LinkisValid && LinkisTouched; // Function to perform when text box is selected\n\n  const onBlur = (event, setter) => {\n    setter(true);\n  }; // Function to perform when text box is used\n\n\n  const onInputUpdate = (event, setter) => {\n    let updatedValue = event.target.value;\n    setter(updatedValue);\n  }; // Function to reset form after clicking submit\n\n\n  const reset = () => {\n    // Reset Title\n    setTitle(\"\");\n    setTitleTouched(false); // Reset Description\n\n    setDescription(\"\");\n    setDescriptionTouched(false); //Reset Skills\n\n    setSkills(\"\");\n    setSkillsTouched(false); //Reset Company\n\n    setCompany(\"\");\n    setCompanyTouched(false); //Reset Availability\n\n    setAvailability(\"\");\n    setAvailabilityTouched(false); //Reset Expiry Date\n\n    setExpiryDate(\"\");\n    setExpiryDateTouched(false); //Reset Link\n\n    setlink(\"\");\n    setlinkTouched(false);\n  }; // Check to see the form has all the required fields before submitting\n\n\n  let formIsValid = false;\n\n  if (TitleisValid && DescriptionisValid && SkillsisValid && CompanyisValid && AvailabilityisValid && ExpiryDateisValid && LinkisValid) {\n    formIsValid = true;\n  }\n\n  console.log(formIsValid); // Post data to the following endpoint '/job/submit' using axios instead of fetch\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(Title, Description, Link, Company, Availability, ExpiryDate); // axios.post('/job/submit', {\n    // Description, Title, ExpiryDate, Link, Company, Availability, Skills\n    // }).then(function(response) {\n    // console.log(response.data);\n    //  });\n\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Title\",\n        variant: \"outlined\",\n        value: Title,\n        onBlur: event => onBlur(event, setTitleTouched),\n        onChange: event => onInputUpdate(event, setTitle),\n        helperText: TitleInputisInvalid ? \"Enter Title\" : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Description\",\n        variant: \"outlined\",\n        value: Description,\n        multiline: true,\n        rows: 5,\n        Maxrows: 10,\n        onBlur: event => onBlur(event, setDescriptionTouched),\n        onChange: event => onInputUpdate(event, setDescription),\n        helperText: DescriptionInputisInvalid ? \"Enter Description\" : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Skills\",\n        variant: \"outlined\",\n        value: Skills,\n        onBlur: event => onBlur(event, setSkillsTouched),\n        onChange: event => onInputUpdate(event, setSkills),\n        helperText: SkillsInputisInvalid ? \"Enter Skills\" : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Company\",\n        variant: \"outlined\",\n        value: Company,\n        onBlur: event => onBlur(event, setCompanyTouched),\n        onChange: event => onInputUpdate(event, setCompany),\n        helperText: CompanyInputisInvalid ? \"Enter Company\" : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Availability\",\n        variant: \"outlined\",\n        value: Availability,\n        onBlur: event => onBlur(event, setAvailabilityTouched),\n        onChange: event => onInputUpdate(event, setAvailability),\n        helperText: AvailabilityisInvalid ? \"Enter Availability\" : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Expiry Date\",\n        variant: \"outlined\",\n        value: ExpiryDate,\n        onBlur: event => onBlur(event, setExpiryDateTouched),\n        onChange: event => onInputUpdate(event, setExpiryDate),\n        helperText: ExpiryDateisInvalid ? \"Enter Expiry Date\" : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Link\",\n        variant: \"outlined\",\n        value: Link,\n        onBlur: event => onBlur(event, setlinkTouched),\n        onChange: event => onInputUpdate(event, setlink),\n        helperText: LinkisInvalid ? \"Enter Link\" : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: reset,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          type: \"Submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: !formIsValid,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(JobForm2, \"sq9EcRjkb8ThbrBbEDKarw1buz4=\", false, function () {\n  return [useStyles];\n});\n\n_c = JobForm2;\nexport default JobForm2;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobForm2\");","map":{"version":3,"sources":["/home/woojae/cohort7_project2/src/components/JobForm.js"],"names":["makeStyles","useTheme","TextField","Button","axios","useState","createTheme","ThemeProvider","useStyles","theme","root","display","flexDirection","justifyContent","alignItems","padding","spacing","margin","width","JobForm2","handleClose","classes","Title","setTitle","TitleTouched","setTitleTouched","TitleisValid","trim","TitleInputisInvalid","Description","setDescription","DescriptionTouched","setDescriptionTouched","DescriptionisValid","DescriptionInputisInvalid","Skills","setSkills","SkillsTouched","setSkillsTouched","SkillsisValid","SkillsInputisInvalid","Company","setCompany","CompanyTouched","setCompanyTouched","CompanyisValid","CompanyInputisInvalid","Availability","setAvailability","AvailabilityTouched","setAvailabilityTouched","AvailabilityisValid","AvailabilityisInvalid","ExpiryDate","setExpiryDate","ExpiryDateTouched","setExpiryDateTouched","ExpiryDateisValid","ExpiryDateisInvalid","Link","setlink","LinkisTouched","setlinkTouched","LinkisValid","LinkisInvalid","onBlur","event","setter","onInputUpdate","updatedValue","target","value","reset","formIsValid","console","log","handleSubmit","e","preventDefault"],"mappings":"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","sourcesContent":["import { makeStyles, useTheme} from '@mui/styles';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport axios from 'axios'\nimport {useState} from 'react'\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\n//import {useForm, Controller} from \"react-hook-form\"\n\n// Style Function\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex', \n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '500px',\n    },\n    '& .MuiButtonBase-root': {\n      margin: theme.spacing(2),\n    },\n  },\n}));\n\n\nconst JobForm2 = ({handleClose}) => {\n  const classes = useStyles();\n\n//  Declaring use state variables for Title textbox\n  const [Title, setTitle] = useState(\"\");\n  const [TitleTouched, setTitleTouched] = useState(false);\n  const TitleisValid = Title.trim() !== \"\";\n  const TitleInputisInvalid = !TitleisValid && TitleTouched;\n\n// Declaring use state variables for Description textbox\n  const [Description, setDescription] = useState(\"\");\n  const [DescriptionTouched, setDescriptionTouched] = useState(false);\n  const DescriptionisValid = Description.trim() !==\"\";\n  const DescriptionInputisInvalid = !DescriptionisValid && DescriptionTouched;\n\n// Declaring use state variables Skills textbox\n  const [Skills, setSkills] = useState(\"\");\n  const [SkillsTouched, setSkillsTouched] = useState(false);\n  const SkillsisValid = Skills.trim() !==\"\";\n  const SkillsInputisInvalid = !SkillsisValid && SkillsTouched;\n\n// Declaring use state variable for Company textbox\n  const [Company, setCompany] = useState(\"\");\n  const [CompanyTouched, setCompanyTouched] = useState(false);\n  const CompanyisValid = Company.trim() !==\"\";\n  const CompanyInputisInvalid = !CompanyisValid && CompanyTouched;\n\n// Declaring use state variable for Availability textbox\n  const [Availability, setAvailability] = useState(\"\")\n  const [AvailabilityTouched, setAvailabilityTouched] = useState(false)\n  const AvailabilityisValid = Availability.trim() !==\"\";\n  const AvailabilityisInvalid = !AvailabilityisValid && AvailabilityTouched;\n\n// Declaring use state variable for ExpiryDate Textbox\n  const [ExpiryDate, setExpiryDate] = useState(\"\")\n  const [ExpiryDateTouched, setExpiryDateTouched] = useState(false)\n  const ExpiryDateisValid = ExpiryDate.trim() !==\"\";\n  const ExpiryDateisInvalid = !ExpiryDateisValid && ExpiryDateTouched;\n\n// Declaring use state variables for Link Textbox\n  const [Link, setlink] = useState(\"\");\n  const [LinkisTouched, setlinkTouched] = useState(false);\n  const LinkisValid = Link.trim() !==\"\";\n  const LinkisInvalid = !LinkisValid && LinkisTouched;\n\n\n\n   // Function to perform when text box is selected\n   const onBlur = (event, setter) => {\n    setter(true);\n    }\n    \n  // Function to perform when text box is used\n  const onInputUpdate = (event, setter)=> {\n    let updatedValue = event.target.value\n    setter(updatedValue)\n  }\n // Function to reset form after clicking submit\n const reset = () => {\n      // Reset Title\n      setTitle(\"\");\n      setTitleTouched(false);\n      // Reset Description\n      setDescription(\"\");\n      setDescriptionTouched(false);\n      //Reset Skills\n      setSkills(\"\");\n      setSkillsTouched(false);\n      //Reset Company\n      setCompany(\"\");\n      setCompanyTouched(false);\n      //Reset Availability\n      setAvailability(\"\");\n      setAvailabilityTouched(false);\n      //Reset Expiry Date\n      setExpiryDate(\"\");\n      setExpiryDateTouched(false);\n      //Reset Link\n      setlink(\"\");\n      setlinkTouched(false);\n }\n\n // Check to see the form has all the required fields before submitting\n  let formIsValid = false\n  if (TitleisValid && DescriptionisValid && SkillsisValid && CompanyisValid && AvailabilityisValid && ExpiryDateisValid && LinkisValid ) {\n    formIsValid = true\n }\n\n  console.log(formIsValid)\n\n  // Post data to the following endpoint '/job/submit' using axios instead of fetch\n    const handleSubmit = (e) => {\n    e.preventDefault(); \n    console.log(Title, Description, Link, Company, Availability, ExpiryDate)\n  \n    // axios.post('/job/submit', {\n    // Description, Title, ExpiryDate, Link, Company, Availability, Skills\n    // }).then(function(response) {\n    // console.log(response.data);\n    //  });\n      reset()\n    };\n\n  return (\n  <>\n    <form className={classes.root} onSubmit={handleSubmit}>\n        <TextField\n          label=\"Title\"\n          variant=\"outlined\"\n          value={Title}\n          onBlur = {(event) => onBlur(event, setTitleTouched)}\n          onChange={(event) => onInputUpdate(event,setTitle)}\n          helperText={TitleInputisInvalid ? \"Enter Title\": null}\n        />\n        <TextField\n          label=\"Description\"\n          variant=\"outlined\"\n          value={Description}\n          multiline\n          rows = {5}\n          Maxrows = {10}\n          onBlur = {(event) => onBlur(event, setDescriptionTouched)}\n          onChange ={(event) => onInputUpdate(event,setDescription)}\n          helperText={DescriptionInputisInvalid ? \"Enter Description\" : null}\n        />\n        <TextField\n          label=\"Skills\"\n          variant=\"outlined\"\n          value={Skills}\n          onBlur = {(event) => onBlur(event, setSkillsTouched)}\n          onChange={(event) => onInputUpdate(event,setSkills)}         \n          helperText={SkillsInputisInvalid ? \"Enter Skills\" : null}\n        />\n        <TextField\n          label=\"Company\"\n          variant=\"outlined\"\n          value={Company}\n          onBlur = {(event) => onBlur(event, setCompanyTouched)}\n          onChange={(event) => onInputUpdate(event,setCompany)}\n          helperText={CompanyInputisInvalid ? \"Enter Company\" : null}\n        />\n        <TextField\n          label=\"Availability\"\n          variant=\"outlined\"\n          value={Availability}\n          onBlur = {(event) => onBlur(event, setAvailabilityTouched)}\n          onChange={(event) => onInputUpdate(event, setAvailability)}\n          helperText={AvailabilityisInvalid ? \"Enter Availability\" : null}\n        />\n        <TextField\n          label=\"Expiry Date\"\n          variant=\"outlined\"\n          value={ExpiryDate}\n          onBlur = {(event) => onBlur(event, setExpiryDateTouched)}\n          onChange={(event) => onInputUpdate(event,setExpiryDate)}\n          helperText={ExpiryDateisInvalid ? \"Enter Expiry Date\" : null}\n        />\n        <TextField\n          label=\"Link\"\n          variant=\"outlined\"\n          value={Link}\n          onBlur = {(event) => onBlur(event, setlinkTouched)}\n          onChange={(event) => onInputUpdate(event,setlink)}\n          helperText={LinkisInvalid ? \"Enter Link\" : null}\n        />\n        <div>\n    <Button variant=\"contained\" color='secondary' onClick={reset}>\n      Cancel\n    </Button>\n    <Button onClick={handleSubmit} type=\"Submit\" variant=\"contained\" color=\"primary\" disabled={!formIsValid}>\n      Submit\n    </Button>\n    </div>\n    </form>\n </>\n\n  );\n      };\n \n    \n     \nexport default JobForm2"]},"metadata":{},"sourceType":"module"}