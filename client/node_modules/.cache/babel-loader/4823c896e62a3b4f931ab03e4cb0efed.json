{"ast":null,"code":"import _slicedToArray from \"/home/woojae/cohort7_project2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { arrayIncludes } from '../utils';\n\nfunction getOrientation() {\n  if (typeof window === 'undefined') {\n    return 'portrait';\n  }\n\n  if (window.screen && window.screen.orientation && window.screen.orientation.angle) {\n    return Math.abs(window.screen.orientation.angle) === 90 ? 'landscape' : 'portrait';\n  } // Support IOS safari\n\n\n  if (window.orientation) {\n    return Math.abs(Number(window.orientation)) === 90 ? 'landscape' : 'portrait';\n  }\n\n  return 'portrait';\n}\n\nexport function useIsLandscape(views, customOrientation) {\n  var _React$useState = React.useState(getOrientation),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      orientation = _React$useState2[0],\n      setOrientation = _React$useState2[1];\n\n  useEnhancedEffect(function () {\n    var eventHandler = function eventHandler() {\n      setOrientation(getOrientation());\n    };\n\n    window.addEventListener('orientationchange', eventHandler);\n    return function () {\n      window.removeEventListener('orientationchange', eventHandler);\n    };\n  }, []);\n\n  if (arrayIncludes(views, ['hours', 'minutes', 'seconds'])) {\n    // could not display 13:34:44 in landscape mode\n    return false;\n  }\n\n  var orientationToUse = customOrientation || orientation;\n  return orientationToUse === 'landscape';\n}\nexport default useIsLandscape;","map":{"version":3,"sources":["/home/woojae/cohort7_project2/node_modules/@mui/lab/internal/pickers/hooks/useIsLandscape.js"],"names":["React","unstable_useEnhancedEffect","useEnhancedEffect","arrayIncludes","getOrientation","window","screen","orientation","angle","Math","abs","Number","useIsLandscape","views","customOrientation","useState","setOrientation","eventHandler","addEventListener","removeEventListener","orientationToUse"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,0BAA0B,IAAIC,iBAAvC,QAAgE,YAAhE;AACA,SAASC,aAAT,QAA8B,UAA9B;;AAEA,SAASC,cAAT,GAA0B;AACxB,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,WAAO,UAAP;AACD;;AAED,MAAIA,MAAM,CAACC,MAAP,IAAiBD,MAAM,CAACC,MAAP,CAAcC,WAA/B,IAA8CF,MAAM,CAACC,MAAP,CAAcC,WAAd,CAA0BC,KAA5E,EAAmF;AACjF,WAAOC,IAAI,CAACC,GAAL,CAASL,MAAM,CAACC,MAAP,CAAcC,WAAd,CAA0BC,KAAnC,MAA8C,EAA9C,GAAmD,WAAnD,GAAiE,UAAxE;AACD,GAPuB,CAOtB;;;AAGF,MAAIH,MAAM,CAACE,WAAX,EAAwB;AACtB,WAAOE,IAAI,CAACC,GAAL,CAASC,MAAM,CAACN,MAAM,CAACE,WAAR,CAAf,MAAyC,EAAzC,GAA8C,WAA9C,GAA4D,UAAnE;AACD;;AAED,SAAO,UAAP;AACD;;AAED,OAAO,SAASK,cAAT,CAAwBC,KAAxB,EAA+BC,iBAA/B,EAAkD;AACvD,wBAAsCd,KAAK,CAACe,QAAN,CAAeX,cAAf,CAAtC;AAAA;AAAA,MAAOG,WAAP;AAAA,MAAoBS,cAApB;;AACAd,EAAAA,iBAAiB,CAAC,YAAM;AACtB,QAAMe,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBD,MAAAA,cAAc,CAACZ,cAAc,EAAf,CAAd;AACD,KAFD;;AAIAC,IAAAA,MAAM,CAACa,gBAAP,CAAwB,mBAAxB,EAA6CD,YAA7C;AACA,WAAO,YAAM;AACXZ,MAAAA,MAAM,CAACc,mBAAP,CAA2B,mBAA3B,EAAgDF,YAAhD;AACD,KAFD;AAGD,GATgB,EASd,EATc,CAAjB;;AAWA,MAAId,aAAa,CAACU,KAAD,EAAQ,CAAC,OAAD,EAAU,SAAV,EAAqB,SAArB,CAAR,CAAjB,EAA2D;AACzD;AACA,WAAO,KAAP;AACD;;AAED,MAAMO,gBAAgB,GAAGN,iBAAiB,IAAIP,WAA9C;AACA,SAAOa,gBAAgB,KAAK,WAA5B;AACD;AACD,eAAeR,cAAf","sourcesContent":["import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { arrayIncludes } from '../utils';\n\nfunction getOrientation() {\n  if (typeof window === 'undefined') {\n    return 'portrait';\n  }\n\n  if (window.screen && window.screen.orientation && window.screen.orientation.angle) {\n    return Math.abs(window.screen.orientation.angle) === 90 ? 'landscape' : 'portrait';\n  } // Support IOS safari\n\n\n  if (window.orientation) {\n    return Math.abs(Number(window.orientation)) === 90 ? 'landscape' : 'portrait';\n  }\n\n  return 'portrait';\n}\n\nexport function useIsLandscape(views, customOrientation) {\n  const [orientation, setOrientation] = React.useState(getOrientation);\n  useEnhancedEffect(() => {\n    const eventHandler = () => {\n      setOrientation(getOrientation());\n    };\n\n    window.addEventListener('orientationchange', eventHandler);\n    return () => {\n      window.removeEventListener('orientationchange', eventHandler);\n    };\n  }, []);\n\n  if (arrayIncludes(views, ['hours', 'minutes', 'seconds'])) {\n    // could not display 13:34:44 in landscape mode\n    return false;\n  }\n\n  const orientationToUse = customOrientation || orientation;\n  return orientationToUse === 'landscape';\n}\nexport default useIsLandscape;"]},"metadata":{},"sourceType":"module"}