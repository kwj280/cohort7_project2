{"ast":null,"code":"var _jsxFileName = \"/home/woojae/cohort7_project2/src/components/ProfileForm.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from '@material-ui/core';\nimport MuiTextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport axios from 'axios';\nimport { styled } from '@mui/system';\nimport { useState } from 'react';\nimport { Grid, IconButton, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { Avatar } from '@mui/material';\nimport { useRef, useEffect } from 'react';\nimport AutoCompleteInput from './AutoCompleteInput';\nimport Chip from '@mui/material/Chip';\nimport Collapse from '@mui/material/Collapse';\nimport WorkExperienceForm from \"./WorkExperienceForm\";\nimport Switch from '@mui/material/Switch';\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close'; //import {useForm, Controller} from \"react-hook-form\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TextField = styled(MuiTextField)({\n  width: '100%'\n});\nconst ListItem = styled('li')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    margin: theme.spacing(0.5),\n    float: 'left'\n  };\n});\nconst skillOptions = ['HTML', 'CSS', 'Javascript', 'Node', 'React', 'MongoDB'];\nconst interestOptions = ['Machine Learning', 'Big Data', 'System Design', 'Load Balancing', 'UI design'];\n\nconst ProfileForm = _ref2 => {\n  _s();\n\n  var _user$firstName, _user$lastName;\n\n  let {\n    user\n  } = _ref2;\n  const [profile, setProfile] = useState(null);\n  const [image, _setImage] = useState(null);\n  const profileImg = useRef(null);\n  const [firstName, setFirstName] = useState((_user$firstName = user === null || user === void 0 ? void 0 : user.firstName) !== null && _user$firstName !== void 0 ? _user$firstName : '');\n  const [lastName, setLastName] = useState((_user$lastName = user === null || user === void 0 ? void 0 : user.lastName) !== null && _user$lastName !== void 0 ? _user$lastName : '');\n  const [skill, setSkill] = useState('');\n  const [skills, setSkills] = useState([]);\n  const addSkillBtnRef = useRef();\n  const [interest, setInterest] = useState('');\n  const [interests, setInterests] = useState([]);\n  const addInterestBtnRef = useRef();\n  const [showWorkExperienceForm, setShowWorkExperienceForm] = useState(false);\n  console.log(profile);\n  useEffect(() => {\n    axios.get('/profile/getByUserId/' + user._id).then(res => {\n      setProfile(res.data);\n\n      _setImage(res.data.profile.profile_picture);\n    });\n  }, []);\n\n  const cleanup = () => {\n    URL.revokeObjectURL(image);\n    profileImg.current.value = null;\n  };\n\n  const setImage = newImage => {\n    if (image) {\n      cleanup();\n    }\n\n    _setImage(newImage);\n  };\n\n  const handleOnChange = event => {\n    var _event$target, _event$target$files;\n\n    const newImage = (_event$target = event.target) === null || _event$target === void 0 ? void 0 : (_event$target$files = _event$target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n\n    if (newImage) {\n      setImage(URL.createObjectURL(newImage));\n    }\n\n    axios.put('/profile/updateProfilePicture', {\n      _id: profile._id,\n      profile_picture: URL.createObjectURL(newImage)\n    }).then(res => {\n      console.log(res);\n    });\n  };\n\n  const onProfilePictureClick = () => {\n    profileImg.current.click();\n  }; //add value to list\n\n\n  const clickAddButton = (value, setValue, setValues) => {\n    setValues(values => {\n      if (values && value && !values.includes(value)) return values.concat(value);\n      return values;\n    });\n    setValue('');\n  };\n\n  const handleDelete = (chipToDelete, setter) => () => {\n    setter(chips => chips.filter(chip => chip !== chipToDelete));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        maxWidth: '50%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        rowSpacing: 2,\n        columnSpacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          container: true,\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: onProfilePictureClick,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"file\",\n              ref: profileImg,\n              onChange: handleOnChange,\n              style: {\n                display: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n              sx: {\n                width: 150,\n                height: 150\n              },\n              alt: \"Name\",\n              src: image || \"/broken-image.jpg\",\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          container: true,\n          justifyContent: \"center\",\n          sx: {\n            marginBottom: \"2em\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\" \", user === null || user === void 0 ? void 0 : user.email, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"First Name\",\n            variant: \"outlined\",\n            value: firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Last Name\",\n            variant: \"outlined\",\n            value: lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(AutoCompleteInput, {\n            selectLabel: \"Skills\",\n            optionList: skillOptions,\n            value: skill,\n            setValue: setSkill,\n            buttonRef: addSkillBtnRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"text\",\n            ref: addSkillBtnRef,\n            onClick: () => clickAddButton(skill, setSkill, setSkills),\n            children: \"ADD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          container: true,\n          sx: {\n            listStyle: 'none'\n          },\n          children: skills.map(skill => {\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(Chip, {\n                label: skill,\n                onDelete: handleDelete(skill, setSkills)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this)\n            }, skill, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(AutoCompleteInput, {\n            selectLabel: \"Interests\",\n            optionList: interestOptions,\n            value: interest,\n            setValue: setInterest,\n            buttonRef: addInterestBtnRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"text\",\n            ref: addInterestBtnRef,\n            onClick: () => clickAddButton(interest, setInterest, setInterests),\n            children: \"ADD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          container: true,\n          sx: {\n            listStyle: 'none'\n          },\n          children: interests.map(interest => {\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(Chip, {\n                label: interest,\n                onDelete: handleDelete(interest, setInterests)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this)\n            }, interest, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Project/Work Experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setShowWorkExperienceForm(prev => !prev),\n            children: !showWorkExperienceForm ? /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Collapse, {\n            in: showWorkExperienceForm,\n            children: /*#__PURE__*/_jsxDEV(WorkExperienceForm, {\n              setShowWorkExperienceForm: setShowWorkExperienceForm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProfileForm, \"d+mfdYKGofBXcajnsGATSn/psho=\");\n\n_c = ProfileForm;\nexport default ProfileForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileForm\");","map":{"version":3,"sources":["/home/woojae/cohort7_project2/src/components/ProfileForm.js"],"names":["makeStyles","MuiTextField","Button","axios","styled","useState","Grid","IconButton","Typography","Box","Avatar","useRef","useEffect","AutoCompleteInput","Chip","Collapse","WorkExperienceForm","Switch","AddIcon","CloseIcon","TextField","width","ListItem","theme","margin","spacing","float","skillOptions","interestOptions","ProfileForm","user","profile","setProfile","image","_setImage","profileImg","firstName","setFirstName","lastName","setLastName","skill","setSkill","skills","setSkills","addSkillBtnRef","interest","setInterest","interests","setInterests","addInterestBtnRef","showWorkExperienceForm","setShowWorkExperienceForm","console","log","get","_id","then","res","data","profile_picture","cleanup","URL","revokeObjectURL","current","value","setImage","newImage","handleOnChange","event","target","files","createObjectURL","put","onProfilePictureClick","click","clickAddButton","setValue","setValues","values","includes","concat","handleDelete","chipToDelete","setter","chips","filter","chip","maxWidth","display","height","marginBottom","email","listStyle","map","prev"],"mappings":"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","sourcesContent":["import { makeStyles } from '@material-ui/core';\nimport MuiTextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport axios from 'axios'\nimport { styled } from '@mui/system';\nimport { useState } from 'react'\nimport { Grid, IconButton, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { Avatar } from '@mui/material';\nimport { useRef, useEffect } from 'react';\nimport AutoCompleteInput from './AutoCompleteInput'\nimport Chip from '@mui/material/Chip';\nimport Collapse from '@mui/material/Collapse';\nimport WorkExperienceForm from \"./WorkExperienceForm\";\nimport Switch from '@mui/material/Switch';\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\n//import {useForm, Controller} from \"react-hook-form\"\n\nconst TextField = styled(MuiTextField)({\n  width: '100%'\n});\nconst ListItem = styled('li')(({ theme }) => ({\n  margin: theme.spacing(0.5),\n  float: 'left',\n}));\n\n\nconst skillOptions = ['HTML', 'CSS', 'Javascript', 'Node', 'React', 'MongoDB'];\nconst interestOptions = ['Machine Learning', 'Big Data', 'System Design', 'Load Balancing', 'UI design']\n\n\nconst ProfileForm = ({ user }) => {\n  const [profile, setProfile] = useState(null);\n  const [image, _setImage] = useState(null);\n  const profileImg = useRef(null)\n  const [firstName, setFirstName] = useState(user?.firstName ?? '')\n  const [lastName, setLastName] = useState(user?.lastName ?? '')\n\n  const [skill, setSkill] = useState('');\n  const [skills, setSkills] = useState([])\n  const addSkillBtnRef = useRef()\n\n  const [interest, setInterest] = useState('');\n  const [interests, setInterests] = useState([])\n  const addInterestBtnRef = useRef()\n\n  const [showWorkExperienceForm, setShowWorkExperienceForm] = useState(false);\n  console.log(profile)\n  useEffect(()=>{\n    axios.get('/profile/getByUserId/' + user._id).then(res=>{\n      setProfile(res.data)\n      _setImage(res.data.profile.profile_picture)\n    })\n  },[])\n\n  const cleanup = () => {\n    URL.revokeObjectURL(image);\n    profileImg.current.value = null;\n  };\n\n  const setImage = (newImage) => {\n    if (image) {\n      cleanup();\n    }\n    _setImage(newImage);\n  };\n\n  const handleOnChange = (event) => {\n    const newImage = event.target?.files?.[0];\n    if (newImage) {\n      setImage(URL.createObjectURL(newImage));\n    }\n    axios.put('/profile/updateProfilePicture', {_id:profile._id ,profile_picture: URL.createObjectURL(newImage)}).then(res=>{\n      console.log(res)\n    })\n\n  };\n  const onProfilePictureClick = () => {\n    profileImg.current.click();\n  };\n\n  //add value to list\n  const clickAddButton = (value, setValue, setValues) => {\n    setValues(values => {\n      if (values && value && !values.includes(value))\n        return values.concat(value)\n      return values\n    })\n    setValue('')\n  }\n\n  const handleDelete = (chipToDelete, setter) => () => {\n    setter((chips) => chips.filter((chip) => chip !== chipToDelete));\n  };\n  return (\n    <>\n      <Box sx={{ maxWidth: '50%' }}>\n        <Grid\n          container\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          rowSpacing={2}\n          columnSpacing={2}\n        >\n          <Grid item xs={12} container justifyContent=\"center\">\n            <IconButton onClick={onProfilePictureClick}>\n              <input type='file' id='file' ref={profileImg} onChange={handleOnChange} style={{ display: 'none' }} />\n              <Avatar\n                sx={{ width: 150, height: 150 }}\n                alt=\"Name\"\n                src={image || \"/broken-image.jpg\"}\n              >\n                User\n              </Avatar>\n            </IconButton>\n          </Grid>\n          <Grid item xs={12} container justifyContent=\"center\" sx={{ marginBottom: \"2em\" }}>\n            <Typography variant=\"h6\"> {user?.email} </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              label=\"First Name\"\n              variant=\"outlined\"\n              value={firstName}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              label=\"Last Name\"\n              variant=\"outlined\"\n              value={lastName}\n            />\n          </Grid>\n          <Grid item xs={10}>\n            <AutoCompleteInput\n              selectLabel={\"Skills\"}\n              optionList={skillOptions}\n              value={skill}\n              setValue={setSkill}\n              buttonRef={addSkillBtnRef} />\n          </Grid>\n          <Grid item xs={2}>\n            <Button variant=\"text\" ref={addSkillBtnRef} onClick={() => clickAddButton(skill, setSkill, setSkills)}>ADD</Button>\n          </Grid>\n          <Grid item xs={12} container sx={{ listStyle: 'none' }}>\n            {skills.map(skill => {\n              return (\n                <ListItem key={skill}>\n                  <Chip\n                    label={skill}\n                    onDelete={handleDelete(skill, setSkills)}\n                  />\n                </ListItem>\n              )\n            })}\n          </Grid>\n\n          <Grid item xs={10}>\n            <AutoCompleteInput selectLabel={\"Interests\"}\n              optionList={interestOptions}\n              value={interest}\n              setValue={setInterest}\n              buttonRef={addInterestBtnRef}\n            />\n          </Grid>\n          <Grid item xs={2}>\n            <Button variant=\"text\" ref={addInterestBtnRef} onClick={() => clickAddButton(interest, setInterest, setInterests)}>ADD</Button>\n          </Grid>\n          <Grid item xs={12} container sx={{ listStyle: 'none' }}>\n            {interests.map(interest => {\n              return (\n                <ListItem key={interest}>\n                  <Chip\n                    label={interest}\n                    onDelete={handleDelete(interest, setInterests)}\n                  />\n                </ListItem>\n              )\n            })}\n          </Grid>\n          <Grid item xs={10}>\n            <h4>Project/Work Experience</h4>\n          </Grid>\n          <Grid item xs={2}>\n            <Button onClick={()=>setShowWorkExperienceForm((prev)=>!prev)}>\n              {!showWorkExperienceForm? <AddIcon />:<CloseIcon />}\n            </Button>\n          </Grid>\n          <Grid item xs={12}>\n            <Collapse in={showWorkExperienceForm}>\n              <WorkExperienceForm setShowWorkExperienceForm={setShowWorkExperienceForm}/>\n            </Collapse>\n          </Grid>\n\n\n\n        </Grid>\n      </Box>\n    </>\n\n  );\n};\n\n\n\nexport default ProfileForm"]},"metadata":{},"sourceType":"module"}