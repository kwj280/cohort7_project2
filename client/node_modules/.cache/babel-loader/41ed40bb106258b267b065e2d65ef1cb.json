{"ast":null,"code":"var _jsxFileName = \"/home/woojae/cohort7_project2/src/components/AutoCompleteInput.js\";\nimport * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst filter = createFilterOptions();\nexport default function FreeSoloCreateOption(value, setValue) {\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    value: value,\n    onChange: (event, newValue) => {\n      setValue(newValue);\n    },\n    filterOptions: (options, params) => {\n      const filtered = filter(options, params);\n      const {\n        inputValue\n      } = params; // Suggest the creation of a new value\n\n      const isExisting = options.some(option => inputValue === option.title);\n\n      if (inputValue !== '' && !isExisting) {\n        filtered.push({\n          inputValue,\n          title: `Add \"${inputValue}\"`\n        });\n      }\n\n      return filtered;\n    },\n    selectOnFocus: true,\n    clearOnBlur: true,\n    handleHomeEndKeys: true,\n    id: \"free-solo-with-text-demo\",\n    options: top100Films,\n    getOptionLabel: option => {\n      // Value selected with enter, right from the input\n      if (typeof option === 'string') {\n        return option;\n      } // Add \"xxx\" option created dynamically\n\n\n      if (option.inputValue) {\n        return option.inputValue;\n      } // Regular option\n\n\n      return option.title;\n    },\n    renderOption: (props, option) => /*#__PURE__*/_jsxDEV(\"li\", { ...props,\n      children: option.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 40\n    }, this),\n    sx: {\n      width: 300\n    },\n    freeSolo: true,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      label: \"Skills\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n} // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\n_c = FreeSoloCreateOption;\nconst top100Films = ['HTML', 'CSS', 'Javascript', 'Node', 'React', 'MongoDB'];\n\nvar _c;\n\n$RefreshReg$(_c, \"FreeSoloCreateOption\");","map":{"version":3,"sources":["/home/woojae/cohort7_project2/src/components/AutoCompleteInput.js"],"names":["React","TextField","Autocomplete","createFilterOptions","filter","FreeSoloCreateOption","value","setValue","event","newValue","options","params","filtered","inputValue","isExisting","some","option","title","push","top100Films","props","width"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,IAAuBC,mBAAvB,QAAkD,4BAAlD;;AAEA,MAAMC,MAAM,GAAGD,mBAAmB,EAAlC;AAEA,eAAe,SAASE,oBAAT,CAA+BC,KAA/B,EAAsCC,QAAtC,EAAgD;AAE7D,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAED,KADT;AAEE,IAAA,QAAQ,EAAE,CAACE,KAAD,EAAQC,QAAR,KAAqB;AAC7BF,MAAAA,QAAQ,CAACE,QAAD,CAAR;AACD,KAJH;AAKE,IAAA,aAAa,EAAE,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAClC,YAAMC,QAAQ,GAAGR,MAAM,CAACM,OAAD,EAAUC,MAAV,CAAvB;AAEA,YAAM;AAAEE,QAAAA;AAAF,UAAiBF,MAAvB,CAHkC,CAIlC;;AACA,YAAMG,UAAU,GAAGJ,OAAO,CAACK,IAAR,CAAcC,MAAD,IAAYH,UAAU,KAAKG,MAAM,CAACC,KAA/C,CAAnB;;AACA,UAAIJ,UAAU,KAAK,EAAf,IAAqB,CAACC,UAA1B,EAAsC;AACpCF,QAAAA,QAAQ,CAACM,IAAT,CAAc;AACZL,UAAAA,UADY;AAEZI,UAAAA,KAAK,EAAG,QAAOJ,UAAW;AAFd,SAAd;AAID;;AAED,aAAOD,QAAP;AACD,KAnBH;AAoBE,IAAA,aAAa,MApBf;AAqBE,IAAA,WAAW,MArBb;AAsBE,IAAA,iBAAiB,MAtBnB;AAuBE,IAAA,EAAE,EAAC,0BAvBL;AAwBE,IAAA,OAAO,EAAEO,WAxBX;AAyBE,IAAA,cAAc,EAAGH,MAAD,IAAY;AAC1B;AACA,UAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,eAAOA,MAAP;AACD,OAJyB,CAK1B;;;AACA,UAAIA,MAAM,CAACH,UAAX,EAAuB;AACrB,eAAOG,MAAM,CAACH,UAAd;AACD,OARyB,CAS1B;;;AACA,aAAOG,MAAM,CAACC,KAAd;AACD,KApCH;AAqCE,IAAA,YAAY,EAAE,CAACG,KAAD,EAAQJ,MAAR,kBAAmB,mBAAQI,KAAR;AAAA,gBAAgBJ,MAAM,CAACC;AAAvB;AAAA;AAAA;AAAA;AAAA,YArCnC;AAsCE,IAAA,EAAE,EAAE;AAAEI,MAAAA,KAAK,EAAE;AAAT,KAtCN;AAuCE,IAAA,QAAQ,MAvCV;AAwCE,IAAA,WAAW,EAAGV,MAAD,iBACX,QAAC,SAAD,OAAeA,MAAf;AAAuB,MAAA,KAAK,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AAzCJ;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD,C,CAED;;KAlDwBN,oB;AAmDxB,MAAMc,WAAW,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,YAAhB,EAA8B,MAA9B,EAAsC,OAAtC,EAA+C,SAA/C,CAApB","sourcesContent":["import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\n\nconst filter = createFilterOptions();\n\nexport default function FreeSoloCreateOption( value, setValue) {\n\n  return (\n    <Autocomplete\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      filterOptions={(options, params) => {\n        const filtered = filter(options, params);\n\n        const { inputValue } = params;\n        // Suggest the creation of a new value\n        const isExisting = options.some((option) => inputValue === option.title);\n        if (inputValue !== '' && !isExisting) {\n          filtered.push({\n            inputValue,\n            title: `Add \"${inputValue}\"`,\n          });\n        }\n\n        return filtered;\n      }}\n      selectOnFocus\n      clearOnBlur\n      handleHomeEndKeys\n      id=\"free-solo-with-text-demo\"\n      options={top100Films}\n      getOptionLabel={(option) => {\n        // Value selected with enter, right from the input\n        if (typeof option === 'string') {\n          return option;\n        }\n        // Add \"xxx\" option created dynamically\n        if (option.inputValue) {\n          return option.inputValue;\n        }\n        // Regular option\n        return option.title;\n      }}\n      renderOption={(props, option) => <li {...props}>{option.title}</li>}\n      sx={{ width: 300 }}\n      freeSolo\n      renderInput={(params) => (\n        <TextField {...params} label=\"Skills\" />\n      )}\n    />\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = ['HTML', 'CSS', 'Javascript', 'Node', 'React', 'MongoDB'\n];"]},"metadata":{},"sourceType":"module"}