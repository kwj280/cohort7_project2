{"ast":null,"code":"var _jsxFileName = \"/home/woojae/cohort7_project2/src/components/AutoCompleteInput.js\";\nimport * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst filter = createFilterOptions();\nexport default function FreeSoloCreateOption(_ref) {\n  let {\n    value,\n    setValue,\n    buttonRef\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    value: value,\n    fullWidth: true,\n    onChange: (event, newValue) => {\n      setValue(newValue);\n    },\n    onInputChange: event => {\n      console.log('qweqw');\n      if (event) setValue(event.target.value);\n    },\n    filterOptions: (options, params) => {\n      const filtered = filter(options, params);\n      const {\n        inputValue\n      } = params; // Suggest the creation of a new value\n\n      return filtered;\n    },\n    selectOnFocus: true,\n    clearOnBlur: true,\n    handleHomeEndKeys: true,\n    id: \"free-solo-with-text-demo\",\n    options: skills,\n    getOptionLabel: option => {\n      // Value selected with enter, right from the input\n      return option;\n    },\n    renderOption: (props, option) => /*#__PURE__*/_jsxDEV(\"li\", { ...props,\n      children: option\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 40\n    }, this),\n    freeSolo: true,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      label: \"Skills\",\n      onKeyDown: e => {\n        if (e.code === 13) {\n          buttonRef.current.click();\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n} // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\n_c = FreeSoloCreateOption;\nconst skills = ['HTML', 'CSS', 'Javascript', 'Node', 'React', 'MongoDB'];\n\nvar _c;\n\n$RefreshReg$(_c, \"FreeSoloCreateOption\");","map":{"version":3,"sources":["/home/woojae/cohort7_project2/src/components/AutoCompleteInput.js"],"names":["React","TextField","Autocomplete","createFilterOptions","filter","FreeSoloCreateOption","value","setValue","buttonRef","event","newValue","console","log","target","options","params","filtered","inputValue","skills","option","props","e","code","current","click"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,IAAuBC,mBAAvB,QAAkD,4BAAlD;;AAEA,MAAMC,MAAM,GAAGD,mBAAmB,EAAlC;AAEA,eAAe,SAASE,oBAAT,OAA4D;AAAA,MAA9B;AAACC,IAAAA,KAAD;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAA8B;AAEzE,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEF,KADT;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,QAAQ,EAAE,CAACG,KAAD,EAAQC,QAAR,KAAqB;AAC7BH,MAAAA,QAAQ,CAACG,QAAD,CAAR;AACD,KALH;AAME,IAAA,aAAa,EAAGD,KAAD,IAAS;AACtBE,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,UAAGH,KAAH,EACEF,QAAQ,CAACE,KAAK,CAACI,MAAN,CAAaP,KAAd,CAAR;AACH,KAVH;AAWE,IAAA,aAAa,EAAE,CAACQ,OAAD,EAAUC,MAAV,KAAqB;AAClC,YAAMC,QAAQ,GAAGZ,MAAM,CAACU,OAAD,EAAUC,MAAV,CAAvB;AAEA,YAAM;AAAEE,QAAAA;AAAF,UAAiBF,MAAvB,CAHkC,CAIlC;;AACA,aAAOC,QAAP;AACD,KAjBH;AAkBE,IAAA,aAAa,MAlBf;AAmBE,IAAA,WAAW,MAnBb;AAoBE,IAAA,iBAAiB,MApBnB;AAqBE,IAAA,EAAE,EAAC,0BArBL;AAsBE,IAAA,OAAO,EAAEE,MAtBX;AAuBE,IAAA,cAAc,EAAGC,MAAD,IAAY;AAC1B;AACA,aAAOA,MAAP;AACD,KA1BH;AA2BE,IAAA,YAAY,EAAE,CAACC,KAAD,EAAQD,MAAR,kBAAmB,mBAAQC,KAAR;AAAA,gBAAgBD;AAAhB;AAAA;AAAA;AAAA;AAAA,YA3BnC;AA4BE,IAAA,QAAQ,MA5BV;AA6BE,IAAA,WAAW,EAAGJ,MAAD,iBACX,QAAC,SAAD,OAAeA,MAAf;AAAuB,MAAA,KAAK,EAAC,QAA7B;AACE,MAAA,SAAS,EAAKM,CAAD,IAAK;AAEhB,YAAIA,CAAC,CAACC,IAAF,KAAW,EAAf,EAAmB;AACjBd,UAAAA,SAAS,CAACe,OAAV,CAAkBC,KAAlB;AACD;AACF;AANH;AAAA;AAAA;AAAA;AAAA;AA9BJ;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD,C,CAED;;KA9CwBnB,oB;AA+CxB,MAAMa,MAAM,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,YAAhB,EAA8B,MAA9B,EAAsC,OAAtC,EAA+C,SAA/C,CAAf","sourcesContent":["import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\n\nconst filter = createFilterOptions();\n\nexport default function FreeSoloCreateOption({value, setValue, buttonRef}) {\n\n  return (\n    <Autocomplete\n      value={value}\n      fullWidth\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      onInputChange={(event)=>{\n        console.log('qweqw')\n        if(event)\n          setValue(event.target.value)\n      }}\n      filterOptions={(options, params) => {\n        const filtered = filter(options, params);\n\n        const { inputValue } = params;\n        // Suggest the creation of a new value\n        return filtered;\n      }}\n      selectOnFocus\n      clearOnBlur\n      handleHomeEndKeys\n      id=\"free-solo-with-text-demo\"\n      options={skills}\n      getOptionLabel={(option) => {\n        // Value selected with enter, right from the input\n        return option;\n      }}\n      renderOption={(props, option) => <li {...props}>{option}</li>}\n      freeSolo\n      renderInput={(params) => (\n        <TextField {...params} label=\"Skills\" \n          onKeyDown = {(e)=>{\n            \n            if (e.code === 13 ){\n              buttonRef.current.click()\n            }\n          }}\n        />\n      )}\n    />\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst skills = ['HTML', 'CSS', 'Javascript', 'Node', 'React', 'MongoDB'];"]},"metadata":{},"sourceType":"module"}