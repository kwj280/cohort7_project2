{"ast":null,"code":"import _slicedToArray from\"/home/woojae/cohort7_project2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{makeStyles}from'@material-ui/core';import TextField from'@mui/material/TextField';import Button from'@mui/material/Button';import axios from'axios';import{useState,useEffect}from'react';//import {useForm, Controller} from \"react-hook-form\"\n// Style Function\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',padding:theme.spacing(2),'& .MuiTextField-root':{margin:theme.spacing(1),width:'500px'},'& .MuiButtonBase-root':{margin:theme.spacing(2)}}};});var JobForm=function JobForm(_ref){var handleClose=_ref.handleClose;var classes=useStyles();//  Declaring use state variables for Title textbox\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),Title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),TitleTouched=_useState4[0],setTitleTouched=_useState4[1];var TitleisValid=Title.trim()!==\"\";var TitleInputisInvalid=!TitleisValid&&TitleTouched;// Declaring use state variables for Description textbox\nvar _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),Description=_useState6[0],setDescription=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),DescriptionTouched=_useState8[0],setDescriptionTouched=_useState8[1];var DescriptionisValid=Description.trim()!==\"\";var DescriptionInputisInvalid=!DescriptionisValid&&DescriptionTouched;// Declaring use state variables Skills textbox\nvar _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),Skills=_useState10[0],setSkills=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),SkillsTouched=_useState12[0],setSkillsTouched=_useState12[1];var SkillsisValid=Skills.trim()!==\"\";var SkillsInputisInvalid=!SkillsisValid&&SkillsTouched;// Declaring use state variable for Company textbox\nvar _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),Company=_useState14[0],setCompany=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),CompanyTouched=_useState16[0],setCompanyTouched=_useState16[1];var CompanyisValid=Company.trim()!==\"\";var CompanyInputisInvalid=!CompanyisValid&&CompanyTouched;// Declaring use state variable for Availability textbox\nvar _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),Availability=_useState18[0],setAvailability=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),AvailabilityTouched=_useState20[0],setAvailabilityTouched=_useState20[1];var AvailabilityisValid=Availability.trim()!==\"\";var AvailabilityisInvalid=!AvailabilityisValid&&AvailabilityTouched;// Declaring use state variable for ExpiryDate Textbox\nvar _useState21=useState(\"\"),_useState22=_slicedToArray(_useState21,2),ExpiryDate=_useState22[0],setExpiryDate=_useState22[1];var _useState23=useState(false),_useState24=_slicedToArray(_useState23,2),ExpiryDateTouched=_useState24[0],setExpiryDateTouched=_useState24[1];var ExpiryDateisValid=ExpiryDate.trim()!==\"\";var ExpiryDateisInvalid=!ExpiryDateisValid&&ExpiryDateTouched;// Declaring use state variables for Link Textbox\nvar _useState25=useState(\"\"),_useState26=_slicedToArray(_useState25,2),Link=_useState26[0],setlink=_useState26[1];var _useState27=useState(false),_useState28=_slicedToArray(_useState27,2),LinkisTouched=_useState28[0],setlinkTouched=_useState28[1];var LinkisValid=Link.trim()!==\"\";var LinkisInvalid=!LinkisValid&&LinkisTouched;// Function to perform when text box is selected\nvar _onBlur=function onBlur(event,setter){setter(true);};// Function to perform when text box is used\nvar onInputUpdate=function onInputUpdate(event,setter){var updatedValue=event.target.value;setter(updatedValue);};// Function to reset form after clicking submit\nvar reset=function reset(){// Reset Title\nsetTitle(\"\");setTitleTouched(false);// Reset Description\nsetDescription(\"\");setDescriptionTouched(false);//Reset Skills\nsetSkills(\"\");setSkillsTouched(false);//Reset Company\nsetCompany(\"\");setCompanyTouched(false);//Reset Availability\nsetAvailability(\"\");setAvailabilityTouched(false);//Reset Expiry Date\nsetExpiryDate(\"\");setExpiryDateTouched(false);//Reset Link\nsetlink(\"\");setlinkTouched(false);};// Check to see the form has all the required fields before submitting\nvar formIsValid=false;if(TitleisValid&&DescriptionisValid&&SkillsisValid&&CompanyisValid&&AvailabilityisValid&&ExpiryDateisValid&&LinkisValid){formIsValid=true;}console.log(formIsValid);// Post data to the following endpoint '/job/submit' using axios instead of fetch\nvar handleSubmit=function handleSubmit(e){e.preventDefault();axios.post('/job/post_jobs',{Title:Title,Description:Description,Skills:Skills,Company:Company,Availability:Availability,ExpiryDate:ExpiryDate,Link:Link}).then(function(response){console.log(response.data);});reset();};// const JobPost = ({setSelectedJobPost}) => {\n//   const [jobPost, setJobPost] = useState([])\n//   useEffect(() => {\n//     async function fetchData() {\n//       // console.log('Fetching superhero data!')\n//       let fetchResult = await fetch(\"http://localhost:27017/\")\n//       let superheroList = await fetchResult.json()\n//       setSuperheroes(superheroList)\n//     }\n//     fetchData()\n//   }, [])\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"form\",{className:classes.root,onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(TextField,{label:\"Title\",variant:\"outlined\",value:Title,onBlur:function onBlur(event){return _onBlur(event,setTitleTouched);},onChange:function onChange(event){return onInputUpdate(event,setTitle);},helperText:TitleInputisInvalid?\"Enter Title\":null}),/*#__PURE__*/_jsx(TextField,{label:\"Description\",variant:\"outlined\",value:Description,multiline:true,rows:5,Maxrows:10,onBlur:function onBlur(event){return _onBlur(event,setDescriptionTouched);},onChange:function onChange(event){return onInputUpdate(event,setDescription);},helperText:DescriptionInputisInvalid?\"Enter Description\":null}),/*#__PURE__*/_jsx(TextField,{label:\"Skills\",variant:\"outlined\",value:Skills,onBlur:function onBlur(event){return _onBlur(event,setSkillsTouched);},onChange:function onChange(event){return onInputUpdate(event,setSkills);},helperText:SkillsInputisInvalid?\"Enter Skills\":null}),/*#__PURE__*/_jsx(TextField,{label:\"Company\",variant:\"outlined\",value:Company,onBlur:function onBlur(event){return _onBlur(event,setCompanyTouched);},onChange:function onChange(event){return onInputUpdate(event,setCompany);},helperText:CompanyInputisInvalid?\"Enter Company\":null}),/*#__PURE__*/_jsx(TextField,{label:\"Availability\",variant:\"outlined\",value:Availability,onBlur:function onBlur(event){return _onBlur(event,setAvailabilityTouched);},onChange:function onChange(event){return onInputUpdate(event,setAvailability);},helperText:AvailabilityisInvalid?\"Enter Availability\":null}),/*#__PURE__*/_jsx(TextField,{label:\"Expiry Date\",variant:\"outlined\",value:ExpiryDate,onBlur:function onBlur(event){return _onBlur(event,setExpiryDateTouched);},onChange:function onChange(event){return onInputUpdate(event,setExpiryDate);},helperText:ExpiryDateisInvalid?\"Enter Expiry Date\":null}),/*#__PURE__*/_jsx(TextField,{label:\"Link\",variant:\"outlined\",value:Link,onBlur:function onBlur(event){return _onBlur(event,setlinkTouched);},onChange:function onChange(event){return onInputUpdate(event,setlink);},helperText:LinkisInvalid?\"Enter Link\":null}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"secondary\",onClick:reset,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSubmit,type:\"Submit\",variant:\"contained\",color:\"primary\",disabled:!formIsValid,children:\"Submit\"})]})]})});};export default JobForm;","map":{"version":3,"sources":["/home/woojae/cohort7_project2/src/components/JobForm.js"],"names":["makeStyles","TextField","Button","axios","useState","useEffect","useStyles","theme","root","display","flexDirection","justifyContent","alignItems","padding","spacing","margin","width","JobForm","handleClose","classes","Title","setTitle","TitleTouched","setTitleTouched","TitleisValid","trim","TitleInputisInvalid","Description","setDescription","DescriptionTouched","setDescriptionTouched","DescriptionisValid","DescriptionInputisInvalid","Skills","setSkills","SkillsTouched","setSkillsTouched","SkillsisValid","SkillsInputisInvalid","Company","setCompany","CompanyTouched","setCompanyTouched","CompanyisValid","CompanyInputisInvalid","Availability","setAvailability","AvailabilityTouched","setAvailabilityTouched","AvailabilityisValid","AvailabilityisInvalid","ExpiryDate","setExpiryDate","ExpiryDateTouched","setExpiryDateTouched","ExpiryDateisValid","ExpiryDateisInvalid","Link","setlink","LinkisTouched","setlinkTouched","LinkisValid","LinkisInvalid","onBlur","event","setter","onInputUpdate","updatedValue","target","value","reset","formIsValid","console","log","handleSubmit","e","preventDefault","post","then","response","data"],"mappings":"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","sourcesContent":["import { makeStyles} from '@material-ui/core';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport axios from 'axios'\nimport {useState, useEffect} from 'react'\n//import {useForm, Controller} from \"react-hook-form\"\n\n// Style Function\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex', \n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '500px',\n    },\n    '& .MuiButtonBase-root': {\n      margin: theme.spacing(2),\n    },\n  },\n}));\n\n\nconst JobForm = ({ handleClose }) => {\n  const classes = useStyles();\n\n  //  Declaring use state variables for Title textbox\n  const [Title, setTitle] = useState(\"\");\n  const [TitleTouched, setTitleTouched] = useState(false);\n  const TitleisValid = Title.trim() !== \"\";\n  const TitleInputisInvalid = !TitleisValid && TitleTouched;\n\n  // Declaring use state variables for Description textbox\n  const [Description, setDescription] = useState(\"\");\n  const [DescriptionTouched, setDescriptionTouched] = useState(false);\n  const DescriptionisValid = Description.trim() !== \"\";\n  const DescriptionInputisInvalid = !DescriptionisValid && DescriptionTouched;\n\n  // Declaring use state variables Skills textbox\n  const [Skills, setSkills] = useState(\"\");\n  const [SkillsTouched, setSkillsTouched] = useState(false);\n  const SkillsisValid = Skills.trim() !== \"\";\n  const SkillsInputisInvalid = !SkillsisValid && SkillsTouched;\n\n  // Declaring use state variable for Company textbox\n  const [Company, setCompany] = useState(\"\");\n  const [CompanyTouched, setCompanyTouched] = useState(false);\n  const CompanyisValid = Company.trim() !== \"\";\n  const CompanyInputisInvalid = !CompanyisValid && CompanyTouched;\n\n  // Declaring use state variable for Availability textbox\n  const [Availability, setAvailability] = useState(\"\")\n  const [AvailabilityTouched, setAvailabilityTouched] = useState(false)\n  const AvailabilityisValid = Availability.trim() !== \"\";\n  const AvailabilityisInvalid = !AvailabilityisValid && AvailabilityTouched;\n\n  // Declaring use state variable for ExpiryDate Textbox\n  const [ExpiryDate, setExpiryDate] = useState(\"\")\n  const [ExpiryDateTouched, setExpiryDateTouched] = useState(false)\n  const ExpiryDateisValid = ExpiryDate.trim() !== \"\";\n  const ExpiryDateisInvalid = !ExpiryDateisValid && ExpiryDateTouched;\n\n  // Declaring use state variables for Link Textbox\n  const [Link, setlink] = useState(\"\");\n  const [LinkisTouched, setlinkTouched] = useState(false);\n  const LinkisValid = Link.trim() !== \"\";\n  const LinkisInvalid = !LinkisValid && LinkisTouched;\n\n\n\n  // Function to perform when text box is selected\n  const onBlur = (event, setter) => {\n    setter(true);\n  }\n    \n  // Function to perform when text box is used\n  const onInputUpdate = (event, setter) => {\n    let updatedValue = event.target.value\n    setter(updatedValue)\n  }\n  // Function to reset form after clicking submit\n  const reset = () => {\n    // Reset Title\n    setTitle(\"\");\n    setTitleTouched(false);\n    // Reset Description\n    setDescription(\"\");\n    setDescriptionTouched(false);\n    //Reset Skills\n    setSkills(\"\");\n    setSkillsTouched(false);\n    //Reset Company\n    setCompany(\"\");\n    setCompanyTouched(false);\n    //Reset Availability\n    setAvailability(\"\");\n    setAvailabilityTouched(false);\n    //Reset Expiry Date\n    setExpiryDate(\"\");\n    setExpiryDateTouched(false);\n    //Reset Link\n    setlink(\"\");\n    setlinkTouched(false);\n  }\n\n  // Check to see the form has all the required fields before submitting\n  let formIsValid = false\n  if (TitleisValid && DescriptionisValid && SkillsisValid && CompanyisValid && AvailabilityisValid && ExpiryDateisValid && LinkisValid) {\n    formIsValid = true\n  }\n\n  console.log(formIsValid)\n\n  // Post data to the following endpoint '/job/submit' using axios instead of fetch\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    axios.post('/job/post_jobs', {\n      Title, Description, Skills, Company, Availability, ExpiryDate, Link\n    }).then(function(response) {\n    console.log(response.data);\n     });\n    reset()\n  };\n  \n  // const JobPost = ({setSelectedJobPost}) => {\n  //   const [jobPost, setJobPost] = useState([])\n  //   useEffect(() => {\n  //     async function fetchData() {\n  //       // console.log('Fetching superhero data!')\n  //       let fetchResult = await fetch(\"http://localhost:27017/\")\n  //       let superheroList = await fetchResult.json()\n  //       setSuperheroes(superheroList)\n  //     }\n  //     fetchData()\n  //   }, [])\n\n  return (\n    <>\n      <form className={classes.root} onSubmit={handleSubmit}>\n        <TextField\n          label=\"Title\"\n          variant=\"outlined\"\n          value={Title}\n          onBlur={(event) => onBlur(event, setTitleTouched)}\n          onChange={(event) => onInputUpdate(event, setTitle)}\n          helperText={TitleInputisInvalid ? \"Enter Title\" : null}\n        />\n        <TextField\n          label=\"Description\"\n          variant=\"outlined\"\n          value={Description}\n          multiline\n          rows={5}\n          Maxrows={10}\n          onBlur={(event) => onBlur(event, setDescriptionTouched)}\n          onChange={(event) => onInputUpdate(event, setDescription)}\n          helperText={DescriptionInputisInvalid ? \"Enter Description\" : null}\n        />\n        <TextField\n          label=\"Skills\"\n          variant=\"outlined\"\n          value={Skills}\n          onBlur={(event) => onBlur(event, setSkillsTouched)}\n          onChange={(event) => onInputUpdate(event, setSkills)}\n          helperText={SkillsInputisInvalid ? \"Enter Skills\" : null}\n        />\n        <TextField\n          label=\"Company\"\n          variant=\"outlined\"\n          value={Company}\n          onBlur={(event) => onBlur(event, setCompanyTouched)}\n          onChange={(event) => onInputUpdate(event, setCompany)}\n          helperText={CompanyInputisInvalid ? \"Enter Company\" : null}\n        />\n        <TextField\n          label=\"Availability\"\n          variant=\"outlined\"\n          value={Availability}\n          onBlur={(event) => onBlur(event, setAvailabilityTouched)}\n          onChange={(event) => onInputUpdate(event, setAvailability)}\n          helperText={AvailabilityisInvalid ? \"Enter Availability\" : null}\n        />\n        <TextField\n          label=\"Expiry Date\"\n          variant=\"outlined\"\n          value={ExpiryDate}\n          onBlur={(event) => onBlur(event, setExpiryDateTouched)}\n          onChange={(event) => onInputUpdate(event, setExpiryDate)}\n          helperText={ExpiryDateisInvalid ? \"Enter Expiry Date\" : null}\n        />\n        <TextField\n          label=\"Link\"\n          variant=\"outlined\"\n          value={Link}\n          onBlur={(event) => onBlur(event, setlinkTouched)}\n          onChange={(event) => onInputUpdate(event, setlink)}\n          helperText={LinkisInvalid ? \"Enter Link\" : null}\n        />\n        <div>\n          <Button variant=\"contained\" color='secondary' onClick={reset}>\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} type=\"Submit\" variant=\"contained\" color=\"primary\" disabled={!formIsValid}>\n            Submit\n          </Button>\n        </div>\n      </form>\n    </>\n\n  );\n} \n \n    \n     \n  export default JobForm"]},"metadata":{},"sourceType":"module"}