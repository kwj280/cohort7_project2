{"ast":null,"code":"var _jsxFileName = \"/home/woojae/cohort7_project2/src/components/WorkExperienceForm.js\",\n    _s = $RefreshSig$();\n\nimport MuiTextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport axios from 'axios';\nimport { styled } from '@mui/system';\nimport { useState } from 'react';\nimport { Grid, IconButton, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useRef } from 'react';\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DateAdapter from '@mui/lab/AdapterMoment';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox'; //import {useForm, Controller} from \"react-hook-form\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TextField = styled(MuiTextField)({\n  width: '100%'\n});\n\nconst WorkExperienceForm = _ref => {\n  _s();\n\n  let {\n    setShowWorkExperienceForm\n  } = _ref;\n  const [dateFrom, setDateFrom] = useState(new Date());\n  const [dateTo, setDateTo] = useState(new Date());\n  const [present, setPresent] = useState(false);\n  const [title, setTitle] = useState('');\n  const [company, setCompany] = useState('');\n  const [description, setDescription] = useState('');\n  const [editButtonVisible, setEditButtonVisible] = useState(false);\n  const [editSkills, setEditSkills] = useState(false);\n\n  function handleInputChange(value, setter) {\n    setter(value);\n    console.log(value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        paddingX: \"1.5rem\",\n        marginBottom: \"1.5rem\"\n      },\n      onMouseEnter: () => {\n        setEditButtonVisible(true);\n      },\n      onMouseLeave: () => {\n        setEditButtonVisible(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n        dateAdapter: DateAdapter,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          rowSpacing: 2,\n          columnSpacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 5,\n            children: /*#__PURE__*/_jsxDEV(DesktopDatePicker, {\n              label: \"From\",\n              value: dateFrom,\n              onChange: newValue => handleInputChange(newValue, setDateFrom),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 5,\n            children: !present ? /*#__PURE__*/_jsxDEV(DesktopDatePicker, {\n              label: \"To\",\n              value: dateTo,\n              onChange: newValue => handleInputChange(newValue, setDateTo),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 13\n            }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                textAlign: 'center'\n              },\n              children: \"Present\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: present,\n                onChange: e => setPresent(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 40\n              }, this),\n              label: \"Present\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Title\",\n              variant: \"outlined\",\n              value: title,\n              onChange: e => handleInputChange(e.target.value, setTitle)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Company\",\n              variant: \"outlined\",\n              value: company,\n              onChange: e => handleInputChange(e.target.value, setCompany)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Description\",\n              variant: \"outlined\",\n              value: description,\n              multiline: true,\n              rows: 5,\n              maxrows: 10,\n              onChange: e => handleInputChange(e.target.value, setDescription)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            container: true,\n            justifyContent: \"right\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"text\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"text\",\n              color: \"warning\",\n              onClick: () => {\n                setShowWorkExperienceForm(false);\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(WorkExperienceForm, \"/OL8DiP3FiD7P7pwilDiSbAtn8M=\");\n\n_c = WorkExperienceForm;\nexport default WorkExperienceForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkExperienceForm\");","map":{"version":3,"sources":["/home/woojae/cohort7_project2/src/components/WorkExperienceForm.js"],"names":["MuiTextField","Button","axios","styled","useState","Grid","IconButton","Typography","Box","useRef","DesktopDatePicker","LocalizationProvider","DateAdapter","FormGroup","FormControlLabel","Checkbox","TextField","width","WorkExperienceForm","setShowWorkExperienceForm","dateFrom","setDateFrom","Date","dateTo","setDateTo","present","setPresent","title","setTitle","company","setCompany","description","setDescription","editButtonVisible","setEditButtonVisible","editSkills","setEditSkills","handleInputChange","value","setter","console","log","paddingX","marginBottom","newValue","params","textAlign","e","target","checked"],"mappings":"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","sourcesContent":["import MuiTextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport axios from 'axios'\nimport { styled } from '@mui/system';\nimport { useState } from 'react'\nimport { Grid, IconButton, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useRef } from 'react';\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DateAdapter from '@mui/lab/AdapterMoment';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n//import {useForm, Controller} from \"react-hook-form\"\n\nconst TextField = styled(MuiTextField)({\n  width: '100%'\n});\n\nconst WorkExperienceForm = ({ setShowWorkExperienceForm }) => {\n\n  const [dateFrom, setDateFrom] = useState(new Date())\n  const [dateTo, setDateTo] = useState(new Date())\n  const [present, setPresent] = useState(false)\n  const [title, setTitle] = useState('')\n  const [company, setCompany] = useState('')\n  const [description, setDescription] = useState('')\n  const [editButtonVisible, setEditButtonVisible] = useState(false)\n  const [editSkills, setEditSkills] = useState(false)\n\n  function handleInputChange(value, setter){\n    setter(value)\n    console.log(value)\n  }\n\n  return (\n    <>\n    <Paper elevation={3} sx={{ paddingX: \"1.5rem\", marginBottom:\"1.5rem\"}}\n        onMouseEnter={() => { setEditButtonVisible(true) }}\n        onMouseLeave={() => { setEditButtonVisible(false) }}\n      >\n      <LocalizationProvider dateAdapter={DateAdapter}>\n        <Grid\n          container\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          rowSpacing={2}\n          columnSpacing={2}\n        >\n          <Grid item xs={5}>\n\n            <DesktopDatePicker\n              label=\"From\"\n              value={dateFrom}\n              onChange={(newValue)=>handleInputChange(newValue, setDateFrom)}\n              renderInput={(params) => <TextField {...params} />}\n            />\n          </Grid>\n          <Grid item xs={5}>\n\n            {!present?\n            <DesktopDatePicker\n              label=\"To\"\n              value={dateTo}\n              onChange={(newValue)=>handleInputChange(newValue, setDateTo)}\n              renderInput={(params) => <TextField {...params} />}\n            />\n            :\n            <Typography sx={{textAlign:'center'}}>Present</Typography>}\n          </Grid>\n          <Grid item xs={2}>\n            <FormControlLabel control={<Checkbox checked={present} onChange={(e)=>setPresent(e.target.checked)}/>} label=\"Present\" />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              label=\"Title\"\n              variant=\"outlined\"\n              value={title}\n              onChange={(e)=>handleInputChange(e.target.value, setTitle)}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              label=\"Company\"\n              variant=\"outlined\"\n              value={company}\n              onChange={(e)=>handleInputChange(e.target.value, setCompany)}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <TextField\n              label=\"Description\"\n              variant=\"outlined\"\n              value={description}\n              multiline\n              rows={5}\n              maxrows={10}\n              onChange={(e)=>handleInputChange(e.target.value, setDescription)}\n            />\n          </Grid>\n          <Grid item xs={12} container justifyContent=\"right\">\n            <Button variant=\"text\">Save</Button>\n            <Button variant=\"text\" color=\"warning\" onClick={()=>{setShowWorkExperienceForm(false)}}>Cancel</Button>\n          </Grid>\n        </Grid>\n\n      </LocalizationProvider>\n      </Paper>\n    </>\n\n  );\n};\n\n\n\nexport default WorkExperienceForm"]},"metadata":{},"sourceType":"module"}