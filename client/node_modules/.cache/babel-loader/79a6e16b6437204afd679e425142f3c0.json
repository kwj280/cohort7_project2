{"ast":null,"code":"var _jsxFileName = \"/home/woojae/cohort7_project2/src/components/ProfileForm.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from '@material-ui/core';\nimport MuiTextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport axios from 'axios';\nimport { styled } from '@mui/system';\nimport { useState } from 'react';\nimport { Grid, IconButton, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { Avatar } from '@mui/material';\nimport { useRef } from 'react';\nimport AutoCompleteInput from './AutoCompleteInput';\nimport Chip from '@mui/material/Chip'; //import {useForm, Controller} from \"react-hook-form\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TextField = styled(MuiTextField)({\n  width: '100%'\n});\nconst ListItem = styled('li')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    margin: theme.spacing(0.5),\n    float: 'left'\n  };\n});\nconst skillOptions = ['HTML', 'CSS', 'Javascript', 'Node', 'React', 'MongoDB'];\nconst interestOptions = ['Machine Learning', 'Big Data', 'System Design', 'Load Balancing', 'UI design'];\n\nconst ProfileForm = _ref2 => {\n  _s();\n\n  var _user$firstName, _user$lastName;\n\n  let {\n    user\n  } = _ref2;\n  const [image, _setImage] = useState(null);\n  const profileImg = useRef(null);\n  const [firstName, setFirstName] = useState((_user$firstName = user.firstName) !== null && _user$firstName !== void 0 ? _user$firstName : '');\n  const [lastName, setLastName] = useState((_user$lastName = user.lastName) !== null && _user$lastName !== void 0 ? _user$lastName : '');\n  const [skill, setSkill] = useState('');\n  const [skills, setSkills] = useState([]);\n  const addSkillBtnRef = useRef();\n  const [interest, setInterest] = useState('');\n  const [interests, setInterests] = useState([]);\n  const addInterestBtnRef = useRef();\n\n  const cleanup = () => {\n    URL.revokeObjectURL(image);\n    profileImg.current.value = null;\n  };\n\n  const setImage = newImage => {\n    if (image) {\n      cleanup();\n    }\n\n    _setImage(newImage);\n  };\n\n  const handleOnChange = event => {\n    var _event$target, _event$target$files;\n\n    const newImage = (_event$target = event.target) === null || _event$target === void 0 ? void 0 : (_event$target$files = _event$target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n\n    if (newImage) {\n      setImage(URL.createObjectURL(newImage));\n    }\n  };\n\n  const onProfilePictureClick = () => {\n    profileImg.current.click();\n  }; //add value to list\n\n\n  const clickAddButton = (value, setValue, setValues) => {\n    setValues(values => {\n      if (values && value && !values.includes(value)) return values.concat(value);\n      return values;\n    });\n    setValue('');\n  };\n\n  const handleDelete = (chipToDelete, setter) => () => {\n    setter(chips => chips.filter(chip => chip !== chipToDelete));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        maxWidth: '50%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        rowSpacing: 2,\n        columnSpacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          container: true,\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: onProfilePictureClick,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"file\",\n              ref: profileImg,\n              onChange: handleOnChange,\n              style: {\n                display: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n              sx: {\n                width: 150,\n                height: 150\n              },\n              alt: \"Name\",\n              src: image || \"/broken-image.jpg\",\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          container: true,\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            children: [\" \", user.email, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"First Name\",\n            variant: \"outlined\",\n            value: firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Last Name\",\n            variant: \"outlined\",\n            value: lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(AutoCompleteInput, {\n            selectLabel: \"Skills\",\n            optionList: skillOptions,\n            value: skill,\n            setValue: setSkill,\n            buttonRef: addSkillBtnRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"text\",\n            ref: addSkillBtnRef,\n            onClick: () => clickAddButton(skill, setSkill, setSkills),\n            children: \"ADD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          container: true,\n          sx: {\n            listStyle: 'none'\n          },\n          children: skills.map(skill => {\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(Chip, {\n                label: skill,\n                onDelete: handleDelete(skill, setSkills)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)\n            }, skill, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(AutoCompleteInput, {\n            selectLabel: \"Interests\",\n            optionList: interestOptions,\n            value: interest,\n            setValue: setInterest,\n            buttonRef: addInterestBtnRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"text\",\n            ref: addInterestBtnRef,\n            onClick: () => clickAddButton(interest, setInterest, setInterests),\n            children: \"ADD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          container: true,\n          sx: {\n            listStyle: 'none'\n          },\n          children: interests.map(interest => {\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(Chip, {\n                label: interest,\n                onDelete: handleDelete(interest, setInterests)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this)\n            }, interest, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProfileForm, \"nhAKl1dVgQ2Yl0qovW1yuLfsLOo=\");\n\n_c = ProfileForm;\nexport default ProfileForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileForm\");","map":{"version":3,"sources":["/home/woojae/cohort7_project2/src/components/ProfileForm.js"],"names":["makeStyles","MuiTextField","Button","axios","styled","useState","Grid","IconButton","Typography","Box","Avatar","useRef","AutoCompleteInput","Chip","TextField","width","ListItem","theme","margin","spacing","float","skillOptions","interestOptions","ProfileForm","user","image","_setImage","profileImg","firstName","setFirstName","lastName","setLastName","skill","setSkill","skills","setSkills","addSkillBtnRef","interest","setInterest","interests","setInterests","addInterestBtnRef","cleanup","URL","revokeObjectURL","current","value","setImage","newImage","handleOnChange","event","target","files","createObjectURL","onProfilePictureClick","click","clickAddButton","setValue","setValues","values","includes","concat","handleDelete","chipToDelete","setter","chips","filter","chip","maxWidth","display","height","email","listStyle","map"],"mappings":"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","sourcesContent":["import { makeStyles } from '@material-ui/core';\nimport MuiTextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport axios from 'axios'\nimport { styled } from '@mui/system';\nimport { useState } from 'react'\nimport { Grid, IconButton, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { Avatar } from '@mui/material';\nimport { useRef } from 'react';\nimport AutoCompleteInput from './AutoCompleteInput'\nimport Chip from '@mui/material/Chip';\n\n//import {useForm, Controller} from \"react-hook-form\"\n\nconst TextField = styled(MuiTextField)({\n  width: '100%'\n});\nconst ListItem = styled('li')(({ theme }) => ({\n  margin: theme.spacing(0.5),\n  float: 'left',\n}));\n\n\nconst skillOptions = ['HTML', 'CSS', 'Javascript', 'Node', 'React', 'MongoDB'];\nconst interestOptions = ['Machine Learning', 'Big Data', 'System Design', 'Load Balancing', 'UI design']\n\n\nconst ProfileForm = ({ user }) => {\n\n  const [image, _setImage] = useState(null);\n  const profileImg = useRef(null)\n  const [firstName, setFirstName] = useState(user.firstName??'')\n  const [lastName, setLastName] = useState(user.lastName??'')\n\n  const [skill, setSkill] = useState('');\n  const [skills, setSkills] = useState([])\n  const addSkillBtnRef = useRef()\n\n  const [interest, setInterest] = useState('');\n  const [interests, setInterests] = useState([])\n  const addInterestBtnRef = useRef()\n\n\n  const cleanup = () => {\n    URL.revokeObjectURL(image);\n    profileImg.current.value = null;\n  };\n\n  const setImage = (newImage) => {\n    if (image) {\n      cleanup();\n    }\n    _setImage(newImage);\n  };\n\n  const handleOnChange = (event) => {\n    const newImage = event.target?.files?.[0];\n    if (newImage) {\n      setImage(URL.createObjectURL(newImage));\n    }\n  };\n  const onProfilePictureClick = () => {\n    profileImg.current.click();\n  };\n\n  //add value to list\n  const clickAddButton = (value, setValue, setValues) => {\n    setValues(values => {\n      if (values && value && !values.includes(value))\n        return values.concat(value)\n      return values\n    })\n    setValue('')\n  }\n\n  const handleDelete = (chipToDelete, setter) => () => {\n    setter((chips) => chips.filter((chip) => chip !== chipToDelete));\n  };\n  return (\n    <>\n      <Box sx={{ maxWidth: '50%' }}>\n        <Grid\n          container\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          rowSpacing={2}\n          columnSpacing={2}\n        >\n          <Grid item xs={12} container justifyContent=\"center\">\n            <IconButton onClick={onProfilePictureClick}>\n              <input type='file' id='file' ref={profileImg} onChange={handleOnChange} style={{ display: 'none' }} />\n              <Avatar\n                sx={{ width: 150, height: 150 }}\n                alt=\"Name\"\n                src={image || \"/broken-image.jpg\"}\n              >\n                User\n              </Avatar>\n            </IconButton>\n          </Grid>\n          <Grid item xs={12} container justifyContent=\"center\">\n            <Typography variant=\"h3\"> {user.email} </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              label=\"First Name\"\n              variant=\"outlined\"\n              value={firstName}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              label=\"Last Name\"\n              variant=\"outlined\"\n              value={lastName}\n            />\n          </Grid>\n          <Grid item xs={10}>\n            <AutoCompleteInput\n              selectLabel={\"Skills\"}\n              optionList={skillOptions}\n              value={skill}\n              setValue={setSkill}\n              buttonRef={addSkillBtnRef} />\n          </Grid>\n          <Grid item xs={2}>\n            <Button variant=\"text\" ref={addSkillBtnRef} onClick={() => clickAddButton(skill, setSkill, setSkills)}>ADD</Button>\n          </Grid>\n          <Grid item xs={12} container sx={{ listStyle: 'none' }}>\n            {skills.map(skill => {\n              return (\n                <ListItem key={skill}>\n                  <Chip\n                    label={skill}\n                    onDelete={handleDelete(skill, setSkills)}\n                  />\n                </ListItem>\n              )\n            })}\n          </Grid>\n\n          <Grid item xs={10}>\n            <AutoCompleteInput selectLabel={\"Interests\"}\n              optionList={interestOptions}\n              value={interest}\n              setValue={setInterest}\n              buttonRef={addInterestBtnRef}\n            />\n          </Grid>\n          <Grid item xs={2}>\n            <Button variant=\"text\" ref={addInterestBtnRef} onClick={() => clickAddButton(interest, setInterest, setInterests)}>ADD</Button>\n          </Grid>\n          <Grid item xs={12} container sx={{ listStyle: 'none' }}>\n            {interests.map(interest => {\n              return (\n                <ListItem key={interest}>\n                  <Chip\n                    label={interest}\n                    onDelete={handleDelete(interest, setInterests)}\n                  />\n                </ListItem>\n              )\n            })}\n          </Grid>\n\n            \n        </Grid>\n      </Box>\n    </>\n\n  );\n};\n\n\n\nexport default ProfileForm"]},"metadata":{},"sourceType":"module"}